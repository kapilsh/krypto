// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: krypto.proto

package krypto.network.rpc;

public final class Krypto {
  private Krypto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code krypto.network.rpc.Exchange}
   */
  public enum Exchange
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_EXCHANGE = 0;</code>
     */
    UNKNOWN_EXCHANGE(0),
    /**
     * <code>COINBASE = 1;</code>
     */
    COINBASE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_EXCHANGE = 0;</code>
     */
    public static final int UNKNOWN_EXCHANGE_VALUE = 0;
    /**
     * <code>COINBASE = 1;</code>
     */
    public static final int COINBASE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Exchange valueOf(int value) {
      return forNumber(value);
    }

    public static Exchange forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_EXCHANGE;
        case 1: return COINBASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Exchange>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Exchange> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Exchange>() {
            public Exchange findValueByNumber(int number) {
              return Exchange.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Exchange[] VALUES = values();

    public static Exchange valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Exchange(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.Exchange)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.Side}
   */
  public enum Side
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_SIDE = 0;</code>
     */
    UNKNOWN_SIDE(0),
    /**
     * <code>BUY = 1;</code>
     */
    BUY(1),
    /**
     * <code>SELL = 2;</code>
     */
    SELL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_SIDE = 0;</code>
     */
    public static final int UNKNOWN_SIDE_VALUE = 0;
    /**
     * <code>BUY = 1;</code>
     */
    public static final int BUY_VALUE = 1;
    /**
     * <code>SELL = 2;</code>
     */
    public static final int SELL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Side valueOf(int value) {
      return forNumber(value);
    }

    public static Side forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_SIDE;
        case 1: return BUY;
        case 2: return SELL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Side>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Side> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Side>() {
            public Side findValueByNumber(int number) {
              return Side.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(1);
    }

    private static final Side[] VALUES = values();

    public static Side valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Side(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.Side)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.OrderSide}
   */
  public enum OrderSide
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ORDER_SIDE = 0;</code>
     */
    UNKNOWN_ORDER_SIDE(0),
    /**
     * <code>BID = 1;</code>
     */
    BID(1),
    /**
     * <code>ASK = 2;</code>
     */
    ASK(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_ORDER_SIDE = 0;</code>
     */
    public static final int UNKNOWN_ORDER_SIDE_VALUE = 0;
    /**
     * <code>BID = 1;</code>
     */
    public static final int BID_VALUE = 1;
    /**
     * <code>ASK = 2;</code>
     */
    public static final int ASK_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderSide valueOf(int value) {
      return forNumber(value);
    }

    public static OrderSide forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ORDER_SIDE;
        case 1: return BID;
        case 2: return ASK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderSide>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderSide> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderSide>() {
            public OrderSide findValueByNumber(int number) {
              return OrderSide.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(2);
    }

    private static final OrderSide[] VALUES = values();

    public static OrderSide valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderSide(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.OrderSide)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.OrderStatus}
   */
  public enum OrderStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ORDER_STATUS = 0;</code>
     */
    UNKNOWN_ORDER_STATUS(0),
    /**
     * <code>IN_FLIGHT = 1;</code>
     */
    IN_FLIGHT(1),
    /**
     * <code>CANCEL_IN_FLIGHT = 2;</code>
     */
    CANCEL_IN_FLIGHT(2),
    /**
     * <code>REPLACE_IN_FLIGHT = 3;</code>
     */
    REPLACE_IN_FLIGHT(3),
    /**
     * <code>NEW = 4;</code>
     */
    NEW(4),
    /**
     * <code>ACCEPTED = 5;</code>
     */
    ACCEPTED(5),
    /**
     * <code>CANCELLED = 6;</code>
     */
    CANCELLED(6),
    /**
     * <code>REPLACED = 7;</code>
     */
    REPLACED(7),
    /**
     * <code>REJECTED = 8;</code>
     */
    REJECTED(8),
    /**
     * <code>CANCEL_REJECTED = 9;</code>
     */
    CANCEL_REJECTED(9),
    /**
     * <code>REPLACE_REJECTED = 10;</code>
     */
    REPLACE_REJECTED(10),
    /**
     * <code>FILLED = 11;</code>
     */
    FILLED(11),
    /**
     * <code>PARTIALLY_FILLED = 12;</code>
     */
    PARTIALLY_FILLED(12),
    /**
     * <code>EXPIRED = 13;</code>
     */
    EXPIRED(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_ORDER_STATUS = 0;</code>
     */
    public static final int UNKNOWN_ORDER_STATUS_VALUE = 0;
    /**
     * <code>IN_FLIGHT = 1;</code>
     */
    public static final int IN_FLIGHT_VALUE = 1;
    /**
     * <code>CANCEL_IN_FLIGHT = 2;</code>
     */
    public static final int CANCEL_IN_FLIGHT_VALUE = 2;
    /**
     * <code>REPLACE_IN_FLIGHT = 3;</code>
     */
    public static final int REPLACE_IN_FLIGHT_VALUE = 3;
    /**
     * <code>NEW = 4;</code>
     */
    public static final int NEW_VALUE = 4;
    /**
     * <code>ACCEPTED = 5;</code>
     */
    public static final int ACCEPTED_VALUE = 5;
    /**
     * <code>CANCELLED = 6;</code>
     */
    public static final int CANCELLED_VALUE = 6;
    /**
     * <code>REPLACED = 7;</code>
     */
    public static final int REPLACED_VALUE = 7;
    /**
     * <code>REJECTED = 8;</code>
     */
    public static final int REJECTED_VALUE = 8;
    /**
     * <code>CANCEL_REJECTED = 9;</code>
     */
    public static final int CANCEL_REJECTED_VALUE = 9;
    /**
     * <code>REPLACE_REJECTED = 10;</code>
     */
    public static final int REPLACE_REJECTED_VALUE = 10;
    /**
     * <code>FILLED = 11;</code>
     */
    public static final int FILLED_VALUE = 11;
    /**
     * <code>PARTIALLY_FILLED = 12;</code>
     */
    public static final int PARTIALLY_FILLED_VALUE = 12;
    /**
     * <code>EXPIRED = 13;</code>
     */
    public static final int EXPIRED_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderStatus valueOf(int value) {
      return forNumber(value);
    }

    public static OrderStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ORDER_STATUS;
        case 1: return IN_FLIGHT;
        case 2: return CANCEL_IN_FLIGHT;
        case 3: return REPLACE_IN_FLIGHT;
        case 4: return NEW;
        case 5: return ACCEPTED;
        case 6: return CANCELLED;
        case 7: return REPLACED;
        case 8: return REJECTED;
        case 9: return CANCEL_REJECTED;
        case 10: return REPLACE_REJECTED;
        case 11: return FILLED;
        case 12: return PARTIALLY_FILLED;
        case 13: return EXPIRED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderStatus>() {
            public OrderStatus findValueByNumber(int number) {
              return OrderStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(3);
    }

    private static final OrderStatus[] VALUES = values();

    public static OrderStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.OrderStatus)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.TimeInForce}
   */
  public enum TimeInForce
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TIF = 0;</code>
     */
    UNKNOWN_TIF(0),
    /**
     * <code>DAY = 1;</code>
     */
    DAY(1),
    /**
     * <code>IOC = 2;</code>
     */
    IOC(2),
    /**
     * <code>FOK = 3;</code>
     */
    FOK(3),
    /**
     * <code>GTC = 4;</code>
     */
    GTC(4),
    /**
     * <code>GTT = 5;</code>
     */
    GTT(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_TIF = 0;</code>
     */
    public static final int UNKNOWN_TIF_VALUE = 0;
    /**
     * <code>DAY = 1;</code>
     */
    public static final int DAY_VALUE = 1;
    /**
     * <code>IOC = 2;</code>
     */
    public static final int IOC_VALUE = 2;
    /**
     * <code>FOK = 3;</code>
     */
    public static final int FOK_VALUE = 3;
    /**
     * <code>GTC = 4;</code>
     */
    public static final int GTC_VALUE = 4;
    /**
     * <code>GTT = 5;</code>
     */
    public static final int GTT_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimeInForce valueOf(int value) {
      return forNumber(value);
    }

    public static TimeInForce forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TIF;
        case 1: return DAY;
        case 2: return IOC;
        case 3: return FOK;
        case 4: return GTC;
        case 5: return GTT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimeInForce>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TimeInForce> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimeInForce>() {
            public TimeInForce findValueByNumber(int number) {
              return TimeInForce.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(4);
    }

    private static final TimeInForce[] VALUES = values();

    public static TimeInForce valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimeInForce(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.TimeInForce)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.Currency}
   */
  public enum Currency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_CURRENCY = 0;</code>
     */
    UNKNOWN_CURRENCY(0),
    /**
     * <code>BAT = 1;</code>
     */
    BAT(1),
    /**
     * <code>BCH = 2;</code>
     */
    BCH(2),
    /**
     * <code>BTC = 3;</code>
     */
    BTC(3),
    /**
     * <code>CVC = 4;</code>
     */
    CVC(4),
    /**
     * <code>DAI = 5;</code>
     */
    DAI(5),
    /**
     * <code>DNT = 6;</code>
     */
    DNT(6),
    /**
     * <code>EOS = 7;</code>
     */
    EOS(7),
    /**
     * <code>ETC = 8;</code>
     */
    ETC(8),
    /**
     * <code>ETH = 9;</code>
     */
    ETH(9),
    /**
     * <code>EUR = 10;</code>
     */
    EUR(10),
    /**
     * <code>GBP = 11;</code>
     */
    GBP(11),
    /**
     * <code>GNT = 12;</code>
     */
    GNT(12),
    /**
     * <code>LINK = 13;</code>
     */
    LINK(13),
    /**
     * <code>LOOM = 14;</code>
     */
    LOOM(14),
    /**
     * <code>LTC = 15;</code>
     */
    LTC(15),
    /**
     * <code>MANA = 16;</code>
     */
    MANA(16),
    /**
     * <code>REP = 17;</code>
     */
    REP(17),
    /**
     * <code>USD = 18;</code>
     */
    USD(18),
    /**
     * <code>USDC = 19;</code>
     */
    USDC(19),
    /**
     * <code>XLM = 20;</code>
     */
    XLM(20),
    /**
     * <code>XRP = 21;</code>
     */
    XRP(21),
    /**
     * <code>ZEC = 22;</code>
     */
    ZEC(22),
    /**
     * <code>ZRX = 23;</code>
     */
    ZRX(23),
    /**
     * <code>XTZ = 24;</code>
     */
    XTZ(24),
    /**
     * <code>ALGO = 25;</code>
     */
    ALGO(25),
    /**
     * <code>DAS = 26;</code>
     */
    DAS(26),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_CURRENCY = 0;</code>
     */
    public static final int UNKNOWN_CURRENCY_VALUE = 0;
    /**
     * <code>BAT = 1;</code>
     */
    public static final int BAT_VALUE = 1;
    /**
     * <code>BCH = 2;</code>
     */
    public static final int BCH_VALUE = 2;
    /**
     * <code>BTC = 3;</code>
     */
    public static final int BTC_VALUE = 3;
    /**
     * <code>CVC = 4;</code>
     */
    public static final int CVC_VALUE = 4;
    /**
     * <code>DAI = 5;</code>
     */
    public static final int DAI_VALUE = 5;
    /**
     * <code>DNT = 6;</code>
     */
    public static final int DNT_VALUE = 6;
    /**
     * <code>EOS = 7;</code>
     */
    public static final int EOS_VALUE = 7;
    /**
     * <code>ETC = 8;</code>
     */
    public static final int ETC_VALUE = 8;
    /**
     * <code>ETH = 9;</code>
     */
    public static final int ETH_VALUE = 9;
    /**
     * <code>EUR = 10;</code>
     */
    public static final int EUR_VALUE = 10;
    /**
     * <code>GBP = 11;</code>
     */
    public static final int GBP_VALUE = 11;
    /**
     * <code>GNT = 12;</code>
     */
    public static final int GNT_VALUE = 12;
    /**
     * <code>LINK = 13;</code>
     */
    public static final int LINK_VALUE = 13;
    /**
     * <code>LOOM = 14;</code>
     */
    public static final int LOOM_VALUE = 14;
    /**
     * <code>LTC = 15;</code>
     */
    public static final int LTC_VALUE = 15;
    /**
     * <code>MANA = 16;</code>
     */
    public static final int MANA_VALUE = 16;
    /**
     * <code>REP = 17;</code>
     */
    public static final int REP_VALUE = 17;
    /**
     * <code>USD = 18;</code>
     */
    public static final int USD_VALUE = 18;
    /**
     * <code>USDC = 19;</code>
     */
    public static final int USDC_VALUE = 19;
    /**
     * <code>XLM = 20;</code>
     */
    public static final int XLM_VALUE = 20;
    /**
     * <code>XRP = 21;</code>
     */
    public static final int XRP_VALUE = 21;
    /**
     * <code>ZEC = 22;</code>
     */
    public static final int ZEC_VALUE = 22;
    /**
     * <code>ZRX = 23;</code>
     */
    public static final int ZRX_VALUE = 23;
    /**
     * <code>XTZ = 24;</code>
     */
    public static final int XTZ_VALUE = 24;
    /**
     * <code>ALGO = 25;</code>
     */
    public static final int ALGO_VALUE = 25;
    /**
     * <code>DAS = 26;</code>
     */
    public static final int DAS_VALUE = 26;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Currency valueOf(int value) {
      return forNumber(value);
    }

    public static Currency forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_CURRENCY;
        case 1: return BAT;
        case 2: return BCH;
        case 3: return BTC;
        case 4: return CVC;
        case 5: return DAI;
        case 6: return DNT;
        case 7: return EOS;
        case 8: return ETC;
        case 9: return ETH;
        case 10: return EUR;
        case 11: return GBP;
        case 12: return GNT;
        case 13: return LINK;
        case 14: return LOOM;
        case 15: return LTC;
        case 16: return MANA;
        case 17: return REP;
        case 18: return USD;
        case 19: return USDC;
        case 20: return XLM;
        case 21: return XRP;
        case 22: return ZEC;
        case 23: return ZRX;
        case 24: return XTZ;
        case 25: return ALGO;
        case 26: return DAS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Currency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Currency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Currency>() {
            public Currency findValueByNumber(int number) {
              return Currency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(5);
    }

    private static final Currency[] VALUES = values();

    public static Currency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Currency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.Currency)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <code>EMPTY = 1;</code>
     */
    EMPTY(1),
    /**
     * <code>ALL = 2;</code>
     */
    ALL(2),
    /**
     * <code>ID = 3;</code>
     */
    ID(3),
    /**
     * <code>EXCHANGE = 4;</code>
     */
    EXCHANGE(4),
    /**
     * <code>PRODUCT = 5;</code>
     */
    PRODUCT(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <code>EMPTY = 1;</code>
     */
    public static final int EMPTY_VALUE = 1;
    /**
     * <code>ALL = 2;</code>
     */
    public static final int ALL_VALUE = 2;
    /**
     * <code>ID = 3;</code>
     */
    public static final int ID_VALUE = 3;
    /**
     * <code>EXCHANGE = 4;</code>
     */
    public static final int EXCHANGE_VALUE = 4;
    /**
     * <code>PRODUCT = 5;</code>
     */
    public static final int PRODUCT_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 1: return EMPTY;
        case 2: return ALL;
        case 3: return ID;
        case 4: return EXCHANGE;
        case 5: return PRODUCT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(6);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.RequestType)
  }

  /**
   * Protobuf enum {@code krypto.network.rpc.InstrumentType}
   */
  public enum InstrumentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_INSTRUMENT_TYPE = 0;</code>
     */
    UNKNOWN_INSTRUMENT_TYPE(0),
    /**
     * <code>STOCK = 1;</code>
     */
    STOCK(1),
    /**
     * <code>FUTURE = 2;</code>
     */
    FUTURE(2),
    /**
     * <code>OPTION = 3;</code>
     */
    OPTION(3),
    /**
     * <code>FOREX = 4;</code>
     */
    FOREX(4),
    /**
     * <code>CRYPTO = 5;</code>
     */
    CRYPTO(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_INSTRUMENT_TYPE = 0;</code>
     */
    public static final int UNKNOWN_INSTRUMENT_TYPE_VALUE = 0;
    /**
     * <code>STOCK = 1;</code>
     */
    public static final int STOCK_VALUE = 1;
    /**
     * <code>FUTURE = 2;</code>
     */
    public static final int FUTURE_VALUE = 2;
    /**
     * <code>OPTION = 3;</code>
     */
    public static final int OPTION_VALUE = 3;
    /**
     * <code>FOREX = 4;</code>
     */
    public static final int FOREX_VALUE = 4;
    /**
     * <code>CRYPTO = 5;</code>
     */
    public static final int CRYPTO_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InstrumentType valueOf(int value) {
      return forNumber(value);
    }

    public static InstrumentType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_INSTRUMENT_TYPE;
        case 1: return STOCK;
        case 2: return FUTURE;
        case 3: return OPTION;
        case 4: return FOREX;
        case 5: return CRYPTO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InstrumentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InstrumentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InstrumentType>() {
            public InstrumentType findValueByNumber(int number) {
              return InstrumentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.getDescriptor().getEnumTypes().get(7);
    }

    private static final InstrumentType[] VALUES = values();

    public static InstrumentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InstrumentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:krypto.network.rpc.InstrumentType)
  }

  public interface InstrumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.Instrument)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
     */
    krypto.network.rpc.Krypto.InstrumentType getType();

    /**
     * <code>string symbol = 3;</code>
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 3;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
     */
    int getExchangeValue();
    /**
     * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
     */
    krypto.network.rpc.Krypto.Exchange getExchange();

    /**
     * <code>string exchange_symbol = 5;</code>
     */
    java.lang.String getExchangeSymbol();
    /**
     * <code>string exchange_symbol = 5;</code>
     */
    com.google.protobuf.ByteString
        getExchangeSymbolBytes();

    /**
     * <code>double tick_size = 6;</code>
     */
    double getTickSize();

    /**
     * <code>double min_size = 7;</code>
     */
    double getMinSize();

    /**
     * <code>double max_size = 8;</code>
     */
    double getMaxSize();

    /**
     * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
     */
    int getCryptoBaseValue();
    /**
     * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
     */
    krypto.network.rpc.Krypto.Currency getCryptoBase();

    /**
     * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
     */
    int getCryptoQuoteValue();
    /**
     * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
     */
    krypto.network.rpc.Krypto.Currency getCryptoQuote();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.Instrument}
   */
  public  static final class Instrument extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.Instrument)
      InstrumentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Instrument.newBuilder() to construct.
    private Instrument(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Instrument() {
      id_ = 0L;
      type_ = 0;
      symbol_ = "";
      exchange_ = 0;
      exchangeSymbol_ = "";
      tickSize_ = 0D;
      minSize_ = 0D;
      maxSize_ = 0D;
      cryptoBase_ = 0;
      cryptoQuote_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Instrument(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              exchange_ = rawValue;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              exchangeSymbol_ = s;
              break;
            }
            case 49: {

              tickSize_ = input.readDouble();
              break;
            }
            case 57: {

              minSize_ = input.readDouble();
              break;
            }
            case 65: {

              maxSize_ = input.readDouble();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              cryptoBase_ = rawValue;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              cryptoQuote_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Instrument_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Instrument_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.Instrument.class, krypto.network.rpc.Krypto.Instrument.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
     */
    public krypto.network.rpc.Krypto.InstrumentType getType() {
      krypto.network.rpc.Krypto.InstrumentType result = krypto.network.rpc.Krypto.InstrumentType.valueOf(type_);
      return result == null ? krypto.network.rpc.Krypto.InstrumentType.UNRECOGNIZED : result;
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 3;</code>
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXCHANGE_FIELD_NUMBER = 4;
    private int exchange_;
    /**
     * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
     */
    public int getExchangeValue() {
      return exchange_;
    }
    /**
     * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
     */
    public krypto.network.rpc.Krypto.Exchange getExchange() {
      krypto.network.rpc.Krypto.Exchange result = krypto.network.rpc.Krypto.Exchange.valueOf(exchange_);
      return result == null ? krypto.network.rpc.Krypto.Exchange.UNRECOGNIZED : result;
    }

    public static final int EXCHANGE_SYMBOL_FIELD_NUMBER = 5;
    private volatile java.lang.Object exchangeSymbol_;
    /**
     * <code>string exchange_symbol = 5;</code>
     */
    public java.lang.String getExchangeSymbol() {
      java.lang.Object ref = exchangeSymbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exchangeSymbol_ = s;
        return s;
      }
    }
    /**
     * <code>string exchange_symbol = 5;</code>
     */
    public com.google.protobuf.ByteString
        getExchangeSymbolBytes() {
      java.lang.Object ref = exchangeSymbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exchangeSymbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICK_SIZE_FIELD_NUMBER = 6;
    private double tickSize_;
    /**
     * <code>double tick_size = 6;</code>
     */
    public double getTickSize() {
      return tickSize_;
    }

    public static final int MIN_SIZE_FIELD_NUMBER = 7;
    private double minSize_;
    /**
     * <code>double min_size = 7;</code>
     */
    public double getMinSize() {
      return minSize_;
    }

    public static final int MAX_SIZE_FIELD_NUMBER = 8;
    private double maxSize_;
    /**
     * <code>double max_size = 8;</code>
     */
    public double getMaxSize() {
      return maxSize_;
    }

    public static final int CRYPTO_BASE_FIELD_NUMBER = 9;
    private int cryptoBase_;
    /**
     * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
     */
    public int getCryptoBaseValue() {
      return cryptoBase_;
    }
    /**
     * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
     */
    public krypto.network.rpc.Krypto.Currency getCryptoBase() {
      krypto.network.rpc.Krypto.Currency result = krypto.network.rpc.Krypto.Currency.valueOf(cryptoBase_);
      return result == null ? krypto.network.rpc.Krypto.Currency.UNRECOGNIZED : result;
    }

    public static final int CRYPTO_QUOTE_FIELD_NUMBER = 10;
    private int cryptoQuote_;
    /**
     * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
     */
    public int getCryptoQuoteValue() {
      return cryptoQuote_;
    }
    /**
     * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
     */
    public krypto.network.rpc.Krypto.Currency getCryptoQuote() {
      krypto.network.rpc.Krypto.Currency result = krypto.network.rpc.Krypto.Currency.valueOf(cryptoQuote_);
      return result == null ? krypto.network.rpc.Krypto.Currency.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (type_ != krypto.network.rpc.Krypto.InstrumentType.UNKNOWN_INSTRUMENT_TYPE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, symbol_);
      }
      if (exchange_ != krypto.network.rpc.Krypto.Exchange.UNKNOWN_EXCHANGE.getNumber()) {
        output.writeEnum(4, exchange_);
      }
      if (!getExchangeSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, exchangeSymbol_);
      }
      if (tickSize_ != 0D) {
        output.writeDouble(6, tickSize_);
      }
      if (minSize_ != 0D) {
        output.writeDouble(7, minSize_);
      }
      if (maxSize_ != 0D) {
        output.writeDouble(8, maxSize_);
      }
      if (cryptoBase_ != krypto.network.rpc.Krypto.Currency.UNKNOWN_CURRENCY.getNumber()) {
        output.writeEnum(9, cryptoBase_);
      }
      if (cryptoQuote_ != krypto.network.rpc.Krypto.Currency.UNKNOWN_CURRENCY.getNumber()) {
        output.writeEnum(10, cryptoQuote_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (type_ != krypto.network.rpc.Krypto.InstrumentType.UNKNOWN_INSTRUMENT_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, symbol_);
      }
      if (exchange_ != krypto.network.rpc.Krypto.Exchange.UNKNOWN_EXCHANGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, exchange_);
      }
      if (!getExchangeSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, exchangeSymbol_);
      }
      if (tickSize_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, tickSize_);
      }
      if (minSize_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, minSize_);
      }
      if (maxSize_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, maxSize_);
      }
      if (cryptoBase_ != krypto.network.rpc.Krypto.Currency.UNKNOWN_CURRENCY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, cryptoBase_);
      }
      if (cryptoQuote_ != krypto.network.rpc.Krypto.Currency.UNKNOWN_CURRENCY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, cryptoQuote_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.Instrument)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.Instrument other = (krypto.network.rpc.Krypto.Instrument) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && type_ == other.type_;
      result = result && getSymbol()
          .equals(other.getSymbol());
      result = result && exchange_ == other.exchange_;
      result = result && getExchangeSymbol()
          .equals(other.getExchangeSymbol());
      result = result && (
          java.lang.Double.doubleToLongBits(getTickSize())
          == java.lang.Double.doubleToLongBits(
              other.getTickSize()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMinSize())
          == java.lang.Double.doubleToLongBits(
              other.getMinSize()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxSize())
          == java.lang.Double.doubleToLongBits(
              other.getMaxSize()));
      result = result && cryptoBase_ == other.cryptoBase_;
      result = result && cryptoQuote_ == other.cryptoQuote_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + exchange_;
      hash = (37 * hash) + EXCHANGE_SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getExchangeSymbol().hashCode();
      hash = (37 * hash) + TICK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTickSize()));
      hash = (37 * hash) + MIN_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinSize()));
      hash = (37 * hash) + MAX_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxSize()));
      hash = (37 * hash) + CRYPTO_BASE_FIELD_NUMBER;
      hash = (53 * hash) + cryptoBase_;
      hash = (37 * hash) + CRYPTO_QUOTE_FIELD_NUMBER;
      hash = (53 * hash) + cryptoQuote_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Instrument parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Instrument parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.Instrument prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.Instrument}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.Instrument)
        krypto.network.rpc.Krypto.InstrumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Instrument_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Instrument_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.Instrument.class, krypto.network.rpc.Krypto.Instrument.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.Instrument.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        type_ = 0;

        symbol_ = "";

        exchange_ = 0;

        exchangeSymbol_ = "";

        tickSize_ = 0D;

        minSize_ = 0D;

        maxSize_ = 0D;

        cryptoBase_ = 0;

        cryptoQuote_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Instrument_descriptor;
      }

      public krypto.network.rpc.Krypto.Instrument getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.Instrument.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.Instrument build() {
        krypto.network.rpc.Krypto.Instrument result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.Instrument buildPartial() {
        krypto.network.rpc.Krypto.Instrument result = new krypto.network.rpc.Krypto.Instrument(this);
        result.id_ = id_;
        result.type_ = type_;
        result.symbol_ = symbol_;
        result.exchange_ = exchange_;
        result.exchangeSymbol_ = exchangeSymbol_;
        result.tickSize_ = tickSize_;
        result.minSize_ = minSize_;
        result.maxSize_ = maxSize_;
        result.cryptoBase_ = cryptoBase_;
        result.cryptoQuote_ = cryptoQuote_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.Instrument) {
          return mergeFrom((krypto.network.rpc.Krypto.Instrument)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.Instrument other) {
        if (other == krypto.network.rpc.Krypto.Instrument.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.exchange_ != 0) {
          setExchangeValue(other.getExchangeValue());
        }
        if (!other.getExchangeSymbol().isEmpty()) {
          exchangeSymbol_ = other.exchangeSymbol_;
          onChanged();
        }
        if (other.getTickSize() != 0D) {
          setTickSize(other.getTickSize());
        }
        if (other.getMinSize() != 0D) {
          setMinSize(other.getMinSize());
        }
        if (other.getMaxSize() != 0D) {
          setMaxSize(other.getMaxSize());
        }
        if (other.cryptoBase_ != 0) {
          setCryptoBaseValue(other.getCryptoBaseValue());
        }
        if (other.cryptoQuote_ != 0) {
          setCryptoQuoteValue(other.getCryptoQuoteValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.Instrument parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.Instrument) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
       */
      public krypto.network.rpc.Krypto.InstrumentType getType() {
        krypto.network.rpc.Krypto.InstrumentType result = krypto.network.rpc.Krypto.InstrumentType.valueOf(type_);
        return result == null ? krypto.network.rpc.Krypto.InstrumentType.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
       */
      public Builder setType(krypto.network.rpc.Krypto.InstrumentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 3;</code>
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 3;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 3;</code>
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 3;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private int exchange_ = 0;
      /**
       * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
       */
      public int getExchangeValue() {
        return exchange_;
      }
      /**
       * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
       */
      public Builder setExchangeValue(int value) {
        exchange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
       */
      public krypto.network.rpc.Krypto.Exchange getExchange() {
        krypto.network.rpc.Krypto.Exchange result = krypto.network.rpc.Krypto.Exchange.valueOf(exchange_);
        return result == null ? krypto.network.rpc.Krypto.Exchange.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
       */
      public Builder setExchange(krypto.network.rpc.Krypto.Exchange value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        exchange_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Exchange exchange = 4;</code>
       */
      public Builder clearExchange() {
        
        exchange_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object exchangeSymbol_ = "";
      /**
       * <code>string exchange_symbol = 5;</code>
       */
      public java.lang.String getExchangeSymbol() {
        java.lang.Object ref = exchangeSymbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exchangeSymbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string exchange_symbol = 5;</code>
       */
      public com.google.protobuf.ByteString
          getExchangeSymbolBytes() {
        java.lang.Object ref = exchangeSymbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exchangeSymbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string exchange_symbol = 5;</code>
       */
      public Builder setExchangeSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        exchangeSymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string exchange_symbol = 5;</code>
       */
      public Builder clearExchangeSymbol() {
        
        exchangeSymbol_ = getDefaultInstance().getExchangeSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string exchange_symbol = 5;</code>
       */
      public Builder setExchangeSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        exchangeSymbol_ = value;
        onChanged();
        return this;
      }

      private double tickSize_ ;
      /**
       * <code>double tick_size = 6;</code>
       */
      public double getTickSize() {
        return tickSize_;
      }
      /**
       * <code>double tick_size = 6;</code>
       */
      public Builder setTickSize(double value) {
        
        tickSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double tick_size = 6;</code>
       */
      public Builder clearTickSize() {
        
        tickSize_ = 0D;
        onChanged();
        return this;
      }

      private double minSize_ ;
      /**
       * <code>double min_size = 7;</code>
       */
      public double getMinSize() {
        return minSize_;
      }
      /**
       * <code>double min_size = 7;</code>
       */
      public Builder setMinSize(double value) {
        
        minSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double min_size = 7;</code>
       */
      public Builder clearMinSize() {
        
        minSize_ = 0D;
        onChanged();
        return this;
      }

      private double maxSize_ ;
      /**
       * <code>double max_size = 8;</code>
       */
      public double getMaxSize() {
        return maxSize_;
      }
      /**
       * <code>double max_size = 8;</code>
       */
      public Builder setMaxSize(double value) {
        
        maxSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double max_size = 8;</code>
       */
      public Builder clearMaxSize() {
        
        maxSize_ = 0D;
        onChanged();
        return this;
      }

      private int cryptoBase_ = 0;
      /**
       * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
       */
      public int getCryptoBaseValue() {
        return cryptoBase_;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
       */
      public Builder setCryptoBaseValue(int value) {
        cryptoBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
       */
      public krypto.network.rpc.Krypto.Currency getCryptoBase() {
        krypto.network.rpc.Krypto.Currency result = krypto.network.rpc.Krypto.Currency.valueOf(cryptoBase_);
        return result == null ? krypto.network.rpc.Krypto.Currency.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
       */
      public Builder setCryptoBase(krypto.network.rpc.Krypto.Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cryptoBase_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_base = 9;</code>
       */
      public Builder clearCryptoBase() {
        
        cryptoBase_ = 0;
        onChanged();
        return this;
      }

      private int cryptoQuote_ = 0;
      /**
       * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
       */
      public int getCryptoQuoteValue() {
        return cryptoQuote_;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
       */
      public Builder setCryptoQuoteValue(int value) {
        cryptoQuote_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
       */
      public krypto.network.rpc.Krypto.Currency getCryptoQuote() {
        krypto.network.rpc.Krypto.Currency result = krypto.network.rpc.Krypto.Currency.valueOf(cryptoQuote_);
        return result == null ? krypto.network.rpc.Krypto.Currency.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
       */
      public Builder setCryptoQuote(krypto.network.rpc.Krypto.Currency value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cryptoQuote_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Currency crypto_quote = 10;</code>
       */
      public Builder clearCryptoQuote() {
        
        cryptoQuote_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.Instrument)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.Instrument)
    private static final krypto.network.rpc.Krypto.Instrument DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.Instrument();
    }

    public static krypto.network.rpc.Krypto.Instrument getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Instrument>
        PARSER = new com.google.protobuf.AbstractParser<Instrument>() {
      public Instrument parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instrument(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Instrument> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Instrument> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.Instrument getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QuoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.Quote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>int64 security_id = 2;</code>
     */
    long getSecurityId();

    /**
     * <code>int64 bid = 3;</code>
     */
    long getBid();

    /**
     * <code>int64 ask = 4;</code>
     */
    long getAsk();

    /**
     * <code>int64 last = 5;</code>
     */
    long getLast();

    /**
     * <code>int64 bid_quantity = 6;</code>
     */
    long getBidQuantity();

    /**
     * <code>int64 ask_quantity = 7;</code>
     */
    long getAskQuantity();

    /**
     * <code>int64 last_quantity = 8;</code>
     */
    long getLastQuantity();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.Quote}
   */
  public  static final class Quote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.Quote)
      QuoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Quote.newBuilder() to construct.
    private Quote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Quote() {
      timestamp_ = 0L;
      securityId_ = 0L;
      bid_ = 0L;
      ask_ = 0L;
      last_ = 0L;
      bidQuantity_ = 0L;
      askQuantity_ = 0L;
      lastQuantity_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Quote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 16: {

              securityId_ = input.readInt64();
              break;
            }
            case 24: {

              bid_ = input.readInt64();
              break;
            }
            case 32: {

              ask_ = input.readInt64();
              break;
            }
            case 40: {

              last_ = input.readInt64();
              break;
            }
            case 48: {

              bidQuantity_ = input.readInt64();
              break;
            }
            case 56: {

              askQuantity_ = input.readInt64();
              break;
            }
            case 64: {

              lastQuantity_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Quote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Quote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.Quote.class, krypto.network.rpc.Krypto.Quote.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int SECURITY_ID_FIELD_NUMBER = 2;
    private long securityId_;
    /**
     * <code>int64 security_id = 2;</code>
     */
    public long getSecurityId() {
      return securityId_;
    }

    public static final int BID_FIELD_NUMBER = 3;
    private long bid_;
    /**
     * <code>int64 bid = 3;</code>
     */
    public long getBid() {
      return bid_;
    }

    public static final int ASK_FIELD_NUMBER = 4;
    private long ask_;
    /**
     * <code>int64 ask = 4;</code>
     */
    public long getAsk() {
      return ask_;
    }

    public static final int LAST_FIELD_NUMBER = 5;
    private long last_;
    /**
     * <code>int64 last = 5;</code>
     */
    public long getLast() {
      return last_;
    }

    public static final int BID_QUANTITY_FIELD_NUMBER = 6;
    private long bidQuantity_;
    /**
     * <code>int64 bid_quantity = 6;</code>
     */
    public long getBidQuantity() {
      return bidQuantity_;
    }

    public static final int ASK_QUANTITY_FIELD_NUMBER = 7;
    private long askQuantity_;
    /**
     * <code>int64 ask_quantity = 7;</code>
     */
    public long getAskQuantity() {
      return askQuantity_;
    }

    public static final int LAST_QUANTITY_FIELD_NUMBER = 8;
    private long lastQuantity_;
    /**
     * <code>int64 last_quantity = 8;</code>
     */
    public long getLastQuantity() {
      return lastQuantity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (securityId_ != 0L) {
        output.writeInt64(2, securityId_);
      }
      if (bid_ != 0L) {
        output.writeInt64(3, bid_);
      }
      if (ask_ != 0L) {
        output.writeInt64(4, ask_);
      }
      if (last_ != 0L) {
        output.writeInt64(5, last_);
      }
      if (bidQuantity_ != 0L) {
        output.writeInt64(6, bidQuantity_);
      }
      if (askQuantity_ != 0L) {
        output.writeInt64(7, askQuantity_);
      }
      if (lastQuantity_ != 0L) {
        output.writeInt64(8, lastQuantity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (securityId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, securityId_);
      }
      if (bid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, bid_);
      }
      if (ask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, ask_);
      }
      if (last_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, last_);
      }
      if (bidQuantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, bidQuantity_);
      }
      if (askQuantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, askQuantity_);
      }
      if (lastQuantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, lastQuantity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.Quote)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.Quote other = (krypto.network.rpc.Krypto.Quote) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getSecurityId()
          == other.getSecurityId());
      result = result && (getBid()
          == other.getBid());
      result = result && (getAsk()
          == other.getAsk());
      result = result && (getLast()
          == other.getLast());
      result = result && (getBidQuantity()
          == other.getBidQuantity());
      result = result && (getAskQuantity()
          == other.getAskQuantity());
      result = result && (getLastQuantity()
          == other.getLastQuantity());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + SECURITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSecurityId());
      hash = (37 * hash) + BID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBid());
      hash = (37 * hash) + ASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAsk());
      hash = (37 * hash) + LAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLast());
      hash = (37 * hash) + BID_QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBidQuantity());
      hash = (37 * hash) + ASK_QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAskQuantity());
      hash = (37 * hash) + LAST_QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastQuantity());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.Quote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Quote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Quote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Quote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.Quote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.Quote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.Quote)
        krypto.network.rpc.Krypto.QuoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Quote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Quote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.Quote.class, krypto.network.rpc.Krypto.Quote.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.Quote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        securityId_ = 0L;

        bid_ = 0L;

        ask_ = 0L;

        last_ = 0L;

        bidQuantity_ = 0L;

        askQuantity_ = 0L;

        lastQuantity_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Quote_descriptor;
      }

      public krypto.network.rpc.Krypto.Quote getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.Quote.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.Quote build() {
        krypto.network.rpc.Krypto.Quote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.Quote buildPartial() {
        krypto.network.rpc.Krypto.Quote result = new krypto.network.rpc.Krypto.Quote(this);
        result.timestamp_ = timestamp_;
        result.securityId_ = securityId_;
        result.bid_ = bid_;
        result.ask_ = ask_;
        result.last_ = last_;
        result.bidQuantity_ = bidQuantity_;
        result.askQuantity_ = askQuantity_;
        result.lastQuantity_ = lastQuantity_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.Quote) {
          return mergeFrom((krypto.network.rpc.Krypto.Quote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.Quote other) {
        if (other == krypto.network.rpc.Krypto.Quote.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getSecurityId() != 0L) {
          setSecurityId(other.getSecurityId());
        }
        if (other.getBid() != 0L) {
          setBid(other.getBid());
        }
        if (other.getAsk() != 0L) {
          setAsk(other.getAsk());
        }
        if (other.getLast() != 0L) {
          setLast(other.getLast());
        }
        if (other.getBidQuantity() != 0L) {
          setBidQuantity(other.getBidQuantity());
        }
        if (other.getAskQuantity() != 0L) {
          setAskQuantity(other.getAskQuantity());
        }
        if (other.getLastQuantity() != 0L) {
          setLastQuantity(other.getLastQuantity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.Quote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.Quote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long securityId_ ;
      /**
       * <code>int64 security_id = 2;</code>
       */
      public long getSecurityId() {
        return securityId_;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder setSecurityId(long value) {
        
        securityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder clearSecurityId() {
        
        securityId_ = 0L;
        onChanged();
        return this;
      }

      private long bid_ ;
      /**
       * <code>int64 bid = 3;</code>
       */
      public long getBid() {
        return bid_;
      }
      /**
       * <code>int64 bid = 3;</code>
       */
      public Builder setBid(long value) {
        
        bid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 bid = 3;</code>
       */
      public Builder clearBid() {
        
        bid_ = 0L;
        onChanged();
        return this;
      }

      private long ask_ ;
      /**
       * <code>int64 ask = 4;</code>
       */
      public long getAsk() {
        return ask_;
      }
      /**
       * <code>int64 ask = 4;</code>
       */
      public Builder setAsk(long value) {
        
        ask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ask = 4;</code>
       */
      public Builder clearAsk() {
        
        ask_ = 0L;
        onChanged();
        return this;
      }

      private long last_ ;
      /**
       * <code>int64 last = 5;</code>
       */
      public long getLast() {
        return last_;
      }
      /**
       * <code>int64 last = 5;</code>
       */
      public Builder setLast(long value) {
        
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 last = 5;</code>
       */
      public Builder clearLast() {
        
        last_ = 0L;
        onChanged();
        return this;
      }

      private long bidQuantity_ ;
      /**
       * <code>int64 bid_quantity = 6;</code>
       */
      public long getBidQuantity() {
        return bidQuantity_;
      }
      /**
       * <code>int64 bid_quantity = 6;</code>
       */
      public Builder setBidQuantity(long value) {
        
        bidQuantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 bid_quantity = 6;</code>
       */
      public Builder clearBidQuantity() {
        
        bidQuantity_ = 0L;
        onChanged();
        return this;
      }

      private long askQuantity_ ;
      /**
       * <code>int64 ask_quantity = 7;</code>
       */
      public long getAskQuantity() {
        return askQuantity_;
      }
      /**
       * <code>int64 ask_quantity = 7;</code>
       */
      public Builder setAskQuantity(long value) {
        
        askQuantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ask_quantity = 7;</code>
       */
      public Builder clearAskQuantity() {
        
        askQuantity_ = 0L;
        onChanged();
        return this;
      }

      private long lastQuantity_ ;
      /**
       * <code>int64 last_quantity = 8;</code>
       */
      public long getLastQuantity() {
        return lastQuantity_;
      }
      /**
       * <code>int64 last_quantity = 8;</code>
       */
      public Builder setLastQuantity(long value) {
        
        lastQuantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 last_quantity = 8;</code>
       */
      public Builder clearLastQuantity() {
        
        lastQuantity_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.Quote)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.Quote)
    private static final krypto.network.rpc.Krypto.Quote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.Quote();
    }

    public static krypto.network.rpc.Krypto.Quote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Quote>
        PARSER = new com.google.protobuf.AbstractParser<Quote>() {
      public Quote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Quote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Quote> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.Quote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.OrderRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>int64 security_id = 2;</code>
     */
    long getSecurityId();

    /**
     * <code>int64 price = 3;</code>
     */
    long getPrice();

    /**
     * <code>int64 quantity = 4;</code>
     */
    long getQuantity();

    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    int getSideValue();
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    krypto.network.rpc.Krypto.Side getSide();

    /**
     * <code>string order_id = 6;</code>
     */
    java.lang.String getOrderId();
    /**
     * <code>string order_id = 6;</code>
     */
    com.google.protobuf.ByteString
        getOrderIdBytes();

    /**
     * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
     */
    int getTifValue();
    /**
     * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
     */
    krypto.network.rpc.Krypto.TimeInForce getTif();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.OrderRequest}
   */
  public  static final class OrderRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.OrderRequest)
      OrderRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderRequest.newBuilder() to construct.
    private OrderRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderRequest() {
      timestamp_ = 0L;
      securityId_ = 0L;
      price_ = 0L;
      quantity_ = 0L;
      side_ = 0;
      orderId_ = "";
      tif_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 16: {

              securityId_ = input.readInt64();
              break;
            }
            case 24: {

              price_ = input.readInt64();
              break;
            }
            case 32: {

              quantity_ = input.readInt64();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              side_ = rawValue;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              orderId_ = s;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              tif_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.OrderRequest.class, krypto.network.rpc.Krypto.OrderRequest.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int SECURITY_ID_FIELD_NUMBER = 2;
    private long securityId_;
    /**
     * <code>int64 security_id = 2;</code>
     */
    public long getSecurityId() {
      return securityId_;
    }

    public static final int PRICE_FIELD_NUMBER = 3;
    private long price_;
    /**
     * <code>int64 price = 3;</code>
     */
    public long getPrice() {
      return price_;
    }

    public static final int QUANTITY_FIELD_NUMBER = 4;
    private long quantity_;
    /**
     * <code>int64 quantity = 4;</code>
     */
    public long getQuantity() {
      return quantity_;
    }

    public static final int SIDE_FIELD_NUMBER = 5;
    private int side_;
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    public int getSideValue() {
      return side_;
    }
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    public krypto.network.rpc.Krypto.Side getSide() {
      krypto.network.rpc.Krypto.Side result = krypto.network.rpc.Krypto.Side.valueOf(side_);
      return result == null ? krypto.network.rpc.Krypto.Side.UNRECOGNIZED : result;
    }

    public static final int ORDER_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object orderId_;
    /**
     * <code>string order_id = 6;</code>
     */
    public java.lang.String getOrderId() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        orderId_ = s;
        return s;
      }
    }
    /**
     * <code>string order_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIdBytes() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIF_FIELD_NUMBER = 7;
    private int tif_;
    /**
     * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
     */
    public int getTifValue() {
      return tif_;
    }
    /**
     * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
     */
    public krypto.network.rpc.Krypto.TimeInForce getTif() {
      krypto.network.rpc.Krypto.TimeInForce result = krypto.network.rpc.Krypto.TimeInForce.valueOf(tif_);
      return result == null ? krypto.network.rpc.Krypto.TimeInForce.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (securityId_ != 0L) {
        output.writeInt64(2, securityId_);
      }
      if (price_ != 0L) {
        output.writeInt64(3, price_);
      }
      if (quantity_ != 0L) {
        output.writeInt64(4, quantity_);
      }
      if (side_ != krypto.network.rpc.Krypto.Side.UNKNOWN_SIDE.getNumber()) {
        output.writeEnum(5, side_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, orderId_);
      }
      if (tif_ != krypto.network.rpc.Krypto.TimeInForce.UNKNOWN_TIF.getNumber()) {
        output.writeEnum(7, tif_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (securityId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, securityId_);
      }
      if (price_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, price_);
      }
      if (quantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, quantity_);
      }
      if (side_ != krypto.network.rpc.Krypto.Side.UNKNOWN_SIDE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, side_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, orderId_);
      }
      if (tif_ != krypto.network.rpc.Krypto.TimeInForce.UNKNOWN_TIF.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, tif_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.OrderRequest)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.OrderRequest other = (krypto.network.rpc.Krypto.OrderRequest) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getSecurityId()
          == other.getSecurityId());
      result = result && (getPrice()
          == other.getPrice());
      result = result && (getQuantity()
          == other.getQuantity());
      result = result && side_ == other.side_;
      result = result && getOrderId()
          .equals(other.getOrderId());
      result = result && tif_ == other.tif_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + SECURITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSecurityId());
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPrice());
      hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getQuantity());
      hash = (37 * hash) + SIDE_FIELD_NUMBER;
      hash = (53 * hash) + side_;
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOrderId().hashCode();
      hash = (37 * hash) + TIF_FIELD_NUMBER;
      hash = (53 * hash) + tif_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.OrderRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.OrderRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.OrderRequest)
        krypto.network.rpc.Krypto.OrderRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.OrderRequest.class, krypto.network.rpc.Krypto.OrderRequest.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.OrderRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        securityId_ = 0L;

        price_ = 0L;

        quantity_ = 0L;

        side_ = 0;

        orderId_ = "";

        tif_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderRequest_descriptor;
      }

      public krypto.network.rpc.Krypto.OrderRequest getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.OrderRequest.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.OrderRequest build() {
        krypto.network.rpc.Krypto.OrderRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.OrderRequest buildPartial() {
        krypto.network.rpc.Krypto.OrderRequest result = new krypto.network.rpc.Krypto.OrderRequest(this);
        result.timestamp_ = timestamp_;
        result.securityId_ = securityId_;
        result.price_ = price_;
        result.quantity_ = quantity_;
        result.side_ = side_;
        result.orderId_ = orderId_;
        result.tif_ = tif_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.OrderRequest) {
          return mergeFrom((krypto.network.rpc.Krypto.OrderRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.OrderRequest other) {
        if (other == krypto.network.rpc.Krypto.OrderRequest.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getSecurityId() != 0L) {
          setSecurityId(other.getSecurityId());
        }
        if (other.getPrice() != 0L) {
          setPrice(other.getPrice());
        }
        if (other.getQuantity() != 0L) {
          setQuantity(other.getQuantity());
        }
        if (other.side_ != 0) {
          setSideValue(other.getSideValue());
        }
        if (!other.getOrderId().isEmpty()) {
          orderId_ = other.orderId_;
          onChanged();
        }
        if (other.tif_ != 0) {
          setTifValue(other.getTifValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.OrderRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.OrderRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long securityId_ ;
      /**
       * <code>int64 security_id = 2;</code>
       */
      public long getSecurityId() {
        return securityId_;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder setSecurityId(long value) {
        
        securityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder clearSecurityId() {
        
        securityId_ = 0L;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <code>int64 price = 3;</code>
       */
      public long getPrice() {
        return price_;
      }
      /**
       * <code>int64 price = 3;</code>
       */
      public Builder setPrice(long value) {
        
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 price = 3;</code>
       */
      public Builder clearPrice() {
        
        price_ = 0L;
        onChanged();
        return this;
      }

      private long quantity_ ;
      /**
       * <code>int64 quantity = 4;</code>
       */
      public long getQuantity() {
        return quantity_;
      }
      /**
       * <code>int64 quantity = 4;</code>
       */
      public Builder setQuantity(long value) {
        
        quantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 quantity = 4;</code>
       */
      public Builder clearQuantity() {
        
        quantity_ = 0L;
        onChanged();
        return this;
      }

      private int side_ = 0;
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public int getSideValue() {
        return side_;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder setSideValue(int value) {
        side_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public krypto.network.rpc.Krypto.Side getSide() {
        krypto.network.rpc.Krypto.Side result = krypto.network.rpc.Krypto.Side.valueOf(side_);
        return result == null ? krypto.network.rpc.Krypto.Side.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder setSide(krypto.network.rpc.Krypto.Side value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        side_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder clearSide() {
        
        side_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object orderId_ = "";
      /**
       * <code>string order_id = 6;</code>
       */
      public java.lang.String getOrderId() {
        java.lang.Object ref = orderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          orderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string order_id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIdBytes() {
        java.lang.Object ref = orderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string order_id = 6;</code>
       */
      public Builder setOrderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 6;</code>
       */
      public Builder clearOrderId() {
        
        orderId_ = getDefaultInstance().getOrderId();
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 6;</code>
       */
      public Builder setOrderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        orderId_ = value;
        onChanged();
        return this;
      }

      private int tif_ = 0;
      /**
       * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
       */
      public int getTifValue() {
        return tif_;
      }
      /**
       * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
       */
      public Builder setTifValue(int value) {
        tif_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
       */
      public krypto.network.rpc.Krypto.TimeInForce getTif() {
        krypto.network.rpc.Krypto.TimeInForce result = krypto.network.rpc.Krypto.TimeInForce.valueOf(tif_);
        return result == null ? krypto.network.rpc.Krypto.TimeInForce.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
       */
      public Builder setTif(krypto.network.rpc.Krypto.TimeInForce value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        tif_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.TimeInForce tif = 7;</code>
       */
      public Builder clearTif() {
        
        tif_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.OrderRequest)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.OrderRequest)
    private static final krypto.network.rpc.Krypto.OrderRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.OrderRequest();
    }

    public static krypto.network.rpc.Krypto.OrderRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderRequest>
        PARSER = new com.google.protobuf.AbstractParser<OrderRequest>() {
      public OrderRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderRequest> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.OrderRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderCancelRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.OrderCancelRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>string order_id = 2;</code>
     */
    java.lang.String getOrderId();
    /**
     * <code>string order_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getOrderIdBytes();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.OrderCancelRequest}
   */
  public  static final class OrderCancelRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.OrderCancelRequest)
      OrderCancelRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderCancelRequest.newBuilder() to construct.
    private OrderCancelRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderCancelRequest() {
      timestamp_ = 0L;
      orderId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderCancelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              orderId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderCancelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderCancelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.OrderCancelRequest.class, krypto.network.rpc.Krypto.OrderCancelRequest.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ORDER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object orderId_;
    /**
     * <code>string order_id = 2;</code>
     */
    public java.lang.String getOrderId() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        orderId_ = s;
        return s;
      }
    }
    /**
     * <code>string order_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIdBytes() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, orderId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, orderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.OrderCancelRequest)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.OrderCancelRequest other = (krypto.network.rpc.Krypto.OrderCancelRequest) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getOrderId()
          .equals(other.getOrderId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOrderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.OrderCancelRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.OrderCancelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.OrderCancelRequest)
        krypto.network.rpc.Krypto.OrderCancelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderCancelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderCancelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.OrderCancelRequest.class, krypto.network.rpc.Krypto.OrderCancelRequest.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.OrderCancelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        orderId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderCancelRequest_descriptor;
      }

      public krypto.network.rpc.Krypto.OrderCancelRequest getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.OrderCancelRequest.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.OrderCancelRequest build() {
        krypto.network.rpc.Krypto.OrderCancelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.OrderCancelRequest buildPartial() {
        krypto.network.rpc.Krypto.OrderCancelRequest result = new krypto.network.rpc.Krypto.OrderCancelRequest(this);
        result.timestamp_ = timestamp_;
        result.orderId_ = orderId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.OrderCancelRequest) {
          return mergeFrom((krypto.network.rpc.Krypto.OrderCancelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.OrderCancelRequest other) {
        if (other == krypto.network.rpc.Krypto.OrderCancelRequest.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.getOrderId().isEmpty()) {
          orderId_ = other.orderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.OrderCancelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.OrderCancelRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object orderId_ = "";
      /**
       * <code>string order_id = 2;</code>
       */
      public java.lang.String getOrderId() {
        java.lang.Object ref = orderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          orderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIdBytes() {
        java.lang.Object ref = orderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder clearOrderId() {
        
        orderId_ = getDefaultInstance().getOrderId();
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        orderId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.OrderCancelRequest)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.OrderCancelRequest)
    private static final krypto.network.rpc.Krypto.OrderCancelRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.OrderCancelRequest();
    }

    public static krypto.network.rpc.Krypto.OrderCancelRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderCancelRequest>
        PARSER = new com.google.protobuf.AbstractParser<OrderCancelRequest>() {
      public OrderCancelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderCancelRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderCancelRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderCancelRequest> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.OrderCancelRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderReplaceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.OrderReplaceRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>string order_id = 2;</code>
     */
    java.lang.String getOrderId();
    /**
     * <code>string order_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getOrderIdBytes();

    /**
     * <code>int64 price = 3;</code>
     */
    long getPrice();

    /**
     * <code>int64 quantity = 4;</code>
     */
    long getQuantity();

    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    int getSideValue();
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    krypto.network.rpc.Krypto.Side getSide();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.OrderReplaceRequest}
   */
  public  static final class OrderReplaceRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.OrderReplaceRequest)
      OrderReplaceRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderReplaceRequest.newBuilder() to construct.
    private OrderReplaceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderReplaceRequest() {
      timestamp_ = 0L;
      orderId_ = "";
      price_ = 0L;
      quantity_ = 0L;
      side_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderReplaceRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              orderId_ = s;
              break;
            }
            case 24: {

              price_ = input.readInt64();
              break;
            }
            case 32: {

              quantity_ = input.readInt64();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              side_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderReplaceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.OrderReplaceRequest.class, krypto.network.rpc.Krypto.OrderReplaceRequest.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ORDER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object orderId_;
    /**
     * <code>string order_id = 2;</code>
     */
    public java.lang.String getOrderId() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        orderId_ = s;
        return s;
      }
    }
    /**
     * <code>string order_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIdBytes() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRICE_FIELD_NUMBER = 3;
    private long price_;
    /**
     * <code>int64 price = 3;</code>
     */
    public long getPrice() {
      return price_;
    }

    public static final int QUANTITY_FIELD_NUMBER = 4;
    private long quantity_;
    /**
     * <code>int64 quantity = 4;</code>
     */
    public long getQuantity() {
      return quantity_;
    }

    public static final int SIDE_FIELD_NUMBER = 5;
    private int side_;
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    public int getSideValue() {
      return side_;
    }
    /**
     * <code>.krypto.network.rpc.Side side = 5;</code>
     */
    public krypto.network.rpc.Krypto.Side getSide() {
      krypto.network.rpc.Krypto.Side result = krypto.network.rpc.Krypto.Side.valueOf(side_);
      return result == null ? krypto.network.rpc.Krypto.Side.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, orderId_);
      }
      if (price_ != 0L) {
        output.writeInt64(3, price_);
      }
      if (quantity_ != 0L) {
        output.writeInt64(4, quantity_);
      }
      if (side_ != krypto.network.rpc.Krypto.Side.UNKNOWN_SIDE.getNumber()) {
        output.writeEnum(5, side_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, orderId_);
      }
      if (price_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, price_);
      }
      if (quantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, quantity_);
      }
      if (side_ != krypto.network.rpc.Krypto.Side.UNKNOWN_SIDE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, side_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.OrderReplaceRequest)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.OrderReplaceRequest other = (krypto.network.rpc.Krypto.OrderReplaceRequest) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getOrderId()
          .equals(other.getOrderId());
      result = result && (getPrice()
          == other.getPrice());
      result = result && (getQuantity()
          == other.getQuantity());
      result = result && side_ == other.side_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOrderId().hashCode();
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPrice());
      hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getQuantity());
      hash = (37 * hash) + SIDE_FIELD_NUMBER;
      hash = (53 * hash) + side_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderReplaceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.OrderReplaceRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.OrderReplaceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.OrderReplaceRequest)
        krypto.network.rpc.Krypto.OrderReplaceRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderReplaceRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.OrderReplaceRequest.class, krypto.network.rpc.Krypto.OrderReplaceRequest.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.OrderReplaceRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        orderId_ = "";

        price_ = 0L;

        quantity_ = 0L;

        side_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor;
      }

      public krypto.network.rpc.Krypto.OrderReplaceRequest getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.OrderReplaceRequest.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.OrderReplaceRequest build() {
        krypto.network.rpc.Krypto.OrderReplaceRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.OrderReplaceRequest buildPartial() {
        krypto.network.rpc.Krypto.OrderReplaceRequest result = new krypto.network.rpc.Krypto.OrderReplaceRequest(this);
        result.timestamp_ = timestamp_;
        result.orderId_ = orderId_;
        result.price_ = price_;
        result.quantity_ = quantity_;
        result.side_ = side_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.OrderReplaceRequest) {
          return mergeFrom((krypto.network.rpc.Krypto.OrderReplaceRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.OrderReplaceRequest other) {
        if (other == krypto.network.rpc.Krypto.OrderReplaceRequest.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.getOrderId().isEmpty()) {
          orderId_ = other.orderId_;
          onChanged();
        }
        if (other.getPrice() != 0L) {
          setPrice(other.getPrice());
        }
        if (other.getQuantity() != 0L) {
          setQuantity(other.getQuantity());
        }
        if (other.side_ != 0) {
          setSideValue(other.getSideValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.OrderReplaceRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.OrderReplaceRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object orderId_ = "";
      /**
       * <code>string order_id = 2;</code>
       */
      public java.lang.String getOrderId() {
        java.lang.Object ref = orderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          orderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIdBytes() {
        java.lang.Object ref = orderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder clearOrderId() {
        
        orderId_ = getDefaultInstance().getOrderId();
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        orderId_ = value;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <code>int64 price = 3;</code>
       */
      public long getPrice() {
        return price_;
      }
      /**
       * <code>int64 price = 3;</code>
       */
      public Builder setPrice(long value) {
        
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 price = 3;</code>
       */
      public Builder clearPrice() {
        
        price_ = 0L;
        onChanged();
        return this;
      }

      private long quantity_ ;
      /**
       * <code>int64 quantity = 4;</code>
       */
      public long getQuantity() {
        return quantity_;
      }
      /**
       * <code>int64 quantity = 4;</code>
       */
      public Builder setQuantity(long value) {
        
        quantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 quantity = 4;</code>
       */
      public Builder clearQuantity() {
        
        quantity_ = 0L;
        onChanged();
        return this;
      }

      private int side_ = 0;
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public int getSideValue() {
        return side_;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder setSideValue(int value) {
        side_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public krypto.network.rpc.Krypto.Side getSide() {
        krypto.network.rpc.Krypto.Side result = krypto.network.rpc.Krypto.Side.valueOf(side_);
        return result == null ? krypto.network.rpc.Krypto.Side.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder setSide(krypto.network.rpc.Krypto.Side value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        side_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.Side side = 5;</code>
       */
      public Builder clearSide() {
        
        side_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.OrderReplaceRequest)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.OrderReplaceRequest)
    private static final krypto.network.rpc.Krypto.OrderReplaceRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.OrderReplaceRequest();
    }

    public static krypto.network.rpc.Krypto.OrderReplaceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderReplaceRequest>
        PARSER = new com.google.protobuf.AbstractParser<OrderReplaceRequest>() {
      public OrderReplaceRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderReplaceRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderReplaceRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderReplaceRequest> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.OrderReplaceRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.OrderUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>string order_id = 2;</code>
     */
    java.lang.String getOrderId();
    /**
     * <code>string order_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getOrderIdBytes();

    /**
     * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
     */
    int getStatusValue();
    /**
     * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
     */
    krypto.network.rpc.Krypto.OrderStatus getStatus();

    /**
     * <code>int64 filled_quantity = 4;</code>
     */
    long getFilledQuantity();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.OrderUpdate}
   */
  public  static final class OrderUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.OrderUpdate)
      OrderUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderUpdate.newBuilder() to construct.
    private OrderUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderUpdate() {
      timestamp_ = 0L;
      orderId_ = "";
      status_ = 0;
      filledQuantity_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              orderId_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 32: {

              filledQuantity_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.OrderUpdate.class, krypto.network.rpc.Krypto.OrderUpdate.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ORDER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object orderId_;
    /**
     * <code>string order_id = 2;</code>
     */
    public java.lang.String getOrderId() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        orderId_ = s;
        return s;
      }
    }
    /**
     * <code>string order_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIdBytes() {
      java.lang.Object ref = orderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
     */
    public krypto.network.rpc.Krypto.OrderStatus getStatus() {
      krypto.network.rpc.Krypto.OrderStatus result = krypto.network.rpc.Krypto.OrderStatus.valueOf(status_);
      return result == null ? krypto.network.rpc.Krypto.OrderStatus.UNRECOGNIZED : result;
    }

    public static final int FILLED_QUANTITY_FIELD_NUMBER = 4;
    private long filledQuantity_;
    /**
     * <code>int64 filled_quantity = 4;</code>
     */
    public long getFilledQuantity() {
      return filledQuantity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, orderId_);
      }
      if (status_ != krypto.network.rpc.Krypto.OrderStatus.UNKNOWN_ORDER_STATUS.getNumber()) {
        output.writeEnum(3, status_);
      }
      if (filledQuantity_ != 0L) {
        output.writeInt64(4, filledQuantity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (!getOrderIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, orderId_);
      }
      if (status_ != krypto.network.rpc.Krypto.OrderStatus.UNKNOWN_ORDER_STATUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_);
      }
      if (filledQuantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, filledQuantity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.OrderUpdate)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.OrderUpdate other = (krypto.network.rpc.Krypto.OrderUpdate) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getOrderId()
          .equals(other.getOrderId());
      result = result && status_ == other.status_;
      result = result && (getFilledQuantity()
          == other.getFilledQuantity());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOrderId().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + FILLED_QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFilledQuantity());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.OrderUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.OrderUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.OrderUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.OrderUpdate)
        krypto.network.rpc.Krypto.OrderUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.OrderUpdate.class, krypto.network.rpc.Krypto.OrderUpdate.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.OrderUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        orderId_ = "";

        status_ = 0;

        filledQuantity_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_OrderUpdate_descriptor;
      }

      public krypto.network.rpc.Krypto.OrderUpdate getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.OrderUpdate.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.OrderUpdate build() {
        krypto.network.rpc.Krypto.OrderUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.OrderUpdate buildPartial() {
        krypto.network.rpc.Krypto.OrderUpdate result = new krypto.network.rpc.Krypto.OrderUpdate(this);
        result.timestamp_ = timestamp_;
        result.orderId_ = orderId_;
        result.status_ = status_;
        result.filledQuantity_ = filledQuantity_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.OrderUpdate) {
          return mergeFrom((krypto.network.rpc.Krypto.OrderUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.OrderUpdate other) {
        if (other == krypto.network.rpc.Krypto.OrderUpdate.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.getOrderId().isEmpty()) {
          orderId_ = other.orderId_;
          onChanged();
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.getFilledQuantity() != 0L) {
          setFilledQuantity(other.getFilledQuantity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.OrderUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.OrderUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object orderId_ = "";
      /**
       * <code>string order_id = 2;</code>
       */
      public java.lang.String getOrderId() {
        java.lang.Object ref = orderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          orderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIdBytes() {
        java.lang.Object ref = orderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        orderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder clearOrderId() {
        
        orderId_ = getDefaultInstance().getOrderId();
        onChanged();
        return this;
      }
      /**
       * <code>string order_id = 2;</code>
       */
      public Builder setOrderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        orderId_ = value;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderStatus getStatus() {
        krypto.network.rpc.Krypto.OrderStatus result = krypto.network.rpc.Krypto.OrderStatus.valueOf(status_);
        return result == null ? krypto.network.rpc.Krypto.OrderStatus.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
       */
      public Builder setStatus(krypto.network.rpc.Krypto.OrderStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderStatus status = 3;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private long filledQuantity_ ;
      /**
       * <code>int64 filled_quantity = 4;</code>
       */
      public long getFilledQuantity() {
        return filledQuantity_;
      }
      /**
       * <code>int64 filled_quantity = 4;</code>
       */
      public Builder setFilledQuantity(long value) {
        
        filledQuantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 filled_quantity = 4;</code>
       */
      public Builder clearFilledQuantity() {
        
        filledQuantity_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.OrderUpdate)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.OrderUpdate)
    private static final krypto.network.rpc.Krypto.OrderUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.OrderUpdate();
    }

    public static krypto.network.rpc.Krypto.OrderUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderUpdate>
        PARSER = new com.google.protobuf.AbstractParser<OrderUpdate>() {
      public OrderUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderUpdate> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.OrderUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.Order)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    boolean hasRequest();
    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    krypto.network.rpc.Krypto.OrderRequest getRequest();
    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    krypto.network.rpc.Krypto.OrderRequestOrBuilder getRequestOrBuilder();

    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    java.util.List<krypto.network.rpc.Krypto.OrderUpdate> 
        getUpdatesList();
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    krypto.network.rpc.Krypto.OrderUpdate getUpdates(int index);
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    int getUpdatesCount();
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    java.util.List<? extends krypto.network.rpc.Krypto.OrderUpdateOrBuilder> 
        getUpdatesOrBuilderList();
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    krypto.network.rpc.Krypto.OrderUpdateOrBuilder getUpdatesOrBuilder(
        int index);

    /**
     * <code>double fees = 4;</code>
     */
    double getFees();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.Order}
   */
  public  static final class Order extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.Order)
      OrderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Order.newBuilder() to construct.
    private Order(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Order() {
      timestamp_ = 0L;
      updates_ = java.util.Collections.emptyList();
      fees_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Order(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              krypto.network.rpc.Krypto.OrderRequest.Builder subBuilder = null;
              if (request_ != null) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(krypto.network.rpc.Krypto.OrderRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                updates_ = new java.util.ArrayList<krypto.network.rpc.Krypto.OrderUpdate>();
                mutable_bitField0_ |= 0x00000004;
              }
              updates_.add(
                  input.readMessage(krypto.network.rpc.Krypto.OrderUpdate.parser(), extensionRegistry));
              break;
            }
            case 33: {

              fees_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          updates_ = java.util.Collections.unmodifiableList(updates_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Order_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.Order.class, krypto.network.rpc.Krypto.Order.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int REQUEST_FIELD_NUMBER = 2;
    private krypto.network.rpc.Krypto.OrderRequest request_;
    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    public krypto.network.rpc.Krypto.OrderRequest getRequest() {
      return request_ == null ? krypto.network.rpc.Krypto.OrderRequest.getDefaultInstance() : request_;
    }
    /**
     * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
     */
    public krypto.network.rpc.Krypto.OrderRequestOrBuilder getRequestOrBuilder() {
      return getRequest();
    }

    public static final int UPDATES_FIELD_NUMBER = 3;
    private java.util.List<krypto.network.rpc.Krypto.OrderUpdate> updates_;
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    public java.util.List<krypto.network.rpc.Krypto.OrderUpdate> getUpdatesList() {
      return updates_;
    }
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    public java.util.List<? extends krypto.network.rpc.Krypto.OrderUpdateOrBuilder> 
        getUpdatesOrBuilderList() {
      return updates_;
    }
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    public int getUpdatesCount() {
      return updates_.size();
    }
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    public krypto.network.rpc.Krypto.OrderUpdate getUpdates(int index) {
      return updates_.get(index);
    }
    /**
     * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
     */
    public krypto.network.rpc.Krypto.OrderUpdateOrBuilder getUpdatesOrBuilder(
        int index) {
      return updates_.get(index);
    }

    public static final int FEES_FIELD_NUMBER = 4;
    private double fees_;
    /**
     * <code>double fees = 4;</code>
     */
    public double getFees() {
      return fees_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (request_ != null) {
        output.writeMessage(2, getRequest());
      }
      for (int i = 0; i < updates_.size(); i++) {
        output.writeMessage(3, updates_.get(i));
      }
      if (fees_ != 0D) {
        output.writeDouble(4, fees_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (request_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRequest());
      }
      for (int i = 0; i < updates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, updates_.get(i));
      }
      if (fees_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, fees_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.Order)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.Order other = (krypto.network.rpc.Krypto.Order) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && getUpdatesList()
          .equals(other.getUpdatesList());
      result = result && (
          java.lang.Double.doubleToLongBits(getFees())
          == java.lang.Double.doubleToLongBits(
              other.getFees()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (getUpdatesCount() > 0) {
        hash = (37 * hash) + UPDATES_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatesList().hashCode();
      }
      hash = (37 * hash) + FEES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFees()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.Order parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Order parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Order parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Order parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.Order prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.Order}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.Order)
        krypto.network.rpc.Krypto.OrderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Order_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Order_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.Order.class, krypto.network.rpc.Krypto.Order.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.Order.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUpdatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          request_ = null;
          requestBuilder_ = null;
        }
        if (updatesBuilder_ == null) {
          updates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          updatesBuilder_.clear();
        }
        fees_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Order_descriptor;
      }

      public krypto.network.rpc.Krypto.Order getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.Order.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.Order build() {
        krypto.network.rpc.Krypto.Order result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.Order buildPartial() {
        krypto.network.rpc.Krypto.Order result = new krypto.network.rpc.Krypto.Order(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.timestamp_ = timestamp_;
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (updatesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            updates_ = java.util.Collections.unmodifiableList(updates_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.updates_ = updates_;
        } else {
          result.updates_ = updatesBuilder_.build();
        }
        result.fees_ = fees_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.Order) {
          return mergeFrom((krypto.network.rpc.Krypto.Order)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.Order other) {
        if (other == krypto.network.rpc.Krypto.Order.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (updatesBuilder_ == null) {
          if (!other.updates_.isEmpty()) {
            if (updates_.isEmpty()) {
              updates_ = other.updates_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureUpdatesIsMutable();
              updates_.addAll(other.updates_);
            }
            onChanged();
          }
        } else {
          if (!other.updates_.isEmpty()) {
            if (updatesBuilder_.isEmpty()) {
              updatesBuilder_.dispose();
              updatesBuilder_ = null;
              updates_ = other.updates_;
              bitField0_ = (bitField0_ & ~0x00000004);
              updatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUpdatesFieldBuilder() : null;
            } else {
              updatesBuilder_.addAllMessages(other.updates_);
            }
          }
        }
        if (other.getFees() != 0D) {
          setFees(other.getFees());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.Order parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.Order) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private krypto.network.rpc.Krypto.OrderRequest request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          krypto.network.rpc.Krypto.OrderRequest, krypto.network.rpc.Krypto.OrderRequest.Builder, krypto.network.rpc.Krypto.OrderRequestOrBuilder> requestBuilder_;
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public boolean hasRequest() {
        return requestBuilder_ != null || request_ != null;
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public krypto.network.rpc.Krypto.OrderRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? krypto.network.rpc.Krypto.OrderRequest.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public Builder setRequest(krypto.network.rpc.Krypto.OrderRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public Builder setRequest(
          krypto.network.rpc.Krypto.OrderRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public Builder mergeRequest(krypto.network.rpc.Krypto.OrderRequest value) {
        if (requestBuilder_ == null) {
          if (request_ != null) {
            request_ =
              krypto.network.rpc.Krypto.OrderRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          request_ = null;
          requestBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public krypto.network.rpc.Krypto.OrderRequest.Builder getRequestBuilder() {
        
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      public krypto.network.rpc.Krypto.OrderRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              krypto.network.rpc.Krypto.OrderRequest.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>.krypto.network.rpc.OrderRequest request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          krypto.network.rpc.Krypto.OrderRequest, krypto.network.rpc.Krypto.OrderRequest.Builder, krypto.network.rpc.Krypto.OrderRequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              krypto.network.rpc.Krypto.OrderRequest, krypto.network.rpc.Krypto.OrderRequest.Builder, krypto.network.rpc.Krypto.OrderRequestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private java.util.List<krypto.network.rpc.Krypto.OrderUpdate> updates_ =
        java.util.Collections.emptyList();
      private void ensureUpdatesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          updates_ = new java.util.ArrayList<krypto.network.rpc.Krypto.OrderUpdate>(updates_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          krypto.network.rpc.Krypto.OrderUpdate, krypto.network.rpc.Krypto.OrderUpdate.Builder, krypto.network.rpc.Krypto.OrderUpdateOrBuilder> updatesBuilder_;

      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public java.util.List<krypto.network.rpc.Krypto.OrderUpdate> getUpdatesList() {
        if (updatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(updates_);
        } else {
          return updatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public int getUpdatesCount() {
        if (updatesBuilder_ == null) {
          return updates_.size();
        } else {
          return updatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderUpdate getUpdates(int index) {
        if (updatesBuilder_ == null) {
          return updates_.get(index);
        } else {
          return updatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder setUpdates(
          int index, krypto.network.rpc.Krypto.OrderUpdate value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.set(index, value);
          onChanged();
        } else {
          updatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder setUpdates(
          int index, krypto.network.rpc.Krypto.OrderUpdate.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.set(index, builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder addUpdates(krypto.network.rpc.Krypto.OrderUpdate value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.add(value);
          onChanged();
        } else {
          updatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder addUpdates(
          int index, krypto.network.rpc.Krypto.OrderUpdate value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.add(index, value);
          onChanged();
        } else {
          updatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder addUpdates(
          krypto.network.rpc.Krypto.OrderUpdate.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.add(builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder addUpdates(
          int index, krypto.network.rpc.Krypto.OrderUpdate.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.add(index, builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder addAllUpdates(
          java.lang.Iterable<? extends krypto.network.rpc.Krypto.OrderUpdate> values) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, updates_);
          onChanged();
        } else {
          updatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder clearUpdates() {
        if (updatesBuilder_ == null) {
          updates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          updatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public Builder removeUpdates(int index) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.remove(index);
          onChanged();
        } else {
          updatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderUpdate.Builder getUpdatesBuilder(
          int index) {
        return getUpdatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderUpdateOrBuilder getUpdatesOrBuilder(
          int index) {
        if (updatesBuilder_ == null) {
          return updates_.get(index);  } else {
          return updatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public java.util.List<? extends krypto.network.rpc.Krypto.OrderUpdateOrBuilder> 
           getUpdatesOrBuilderList() {
        if (updatesBuilder_ != null) {
          return updatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(updates_);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderUpdate.Builder addUpdatesBuilder() {
        return getUpdatesFieldBuilder().addBuilder(
            krypto.network.rpc.Krypto.OrderUpdate.getDefaultInstance());
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public krypto.network.rpc.Krypto.OrderUpdate.Builder addUpdatesBuilder(
          int index) {
        return getUpdatesFieldBuilder().addBuilder(
            index, krypto.network.rpc.Krypto.OrderUpdate.getDefaultInstance());
      }
      /**
       * <code>repeated .krypto.network.rpc.OrderUpdate updates = 3;</code>
       */
      public java.util.List<krypto.network.rpc.Krypto.OrderUpdate.Builder> 
           getUpdatesBuilderList() {
        return getUpdatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          krypto.network.rpc.Krypto.OrderUpdate, krypto.network.rpc.Krypto.OrderUpdate.Builder, krypto.network.rpc.Krypto.OrderUpdateOrBuilder> 
          getUpdatesFieldBuilder() {
        if (updatesBuilder_ == null) {
          updatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              krypto.network.rpc.Krypto.OrderUpdate, krypto.network.rpc.Krypto.OrderUpdate.Builder, krypto.network.rpc.Krypto.OrderUpdateOrBuilder>(
                  updates_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          updates_ = null;
        }
        return updatesBuilder_;
      }

      private double fees_ ;
      /**
       * <code>double fees = 4;</code>
       */
      public double getFees() {
        return fees_;
      }
      /**
       * <code>double fees = 4;</code>
       */
      public Builder setFees(double value) {
        
        fees_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double fees = 4;</code>
       */
      public Builder clearFees() {
        
        fees_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.Order)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.Order)
    private static final krypto.network.rpc.Krypto.Order DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.Order();
    }

    public static krypto.network.rpc.Krypto.Order getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Order>
        PARSER = new com.google.protobuf.AbstractParser<Order>() {
      public Order parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Order(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Order> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Order> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.Order getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>int64 security_id = 2;</code>
     */
    long getSecurityId();

    /**
     * <code>int64 position = 3;</code>
     */
    long getPosition();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.Position}
   */
  public  static final class Position extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.Position)
      PositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Position() {
      timestamp_ = 0L;
      securityId_ = 0L;
      position_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 16: {

              securityId_ = input.readInt64();
              break;
            }
            case 24: {

              position_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.Position.class, krypto.network.rpc.Krypto.Position.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int SECURITY_ID_FIELD_NUMBER = 2;
    private long securityId_;
    /**
     * <code>int64 security_id = 2;</code>
     */
    public long getSecurityId() {
      return securityId_;
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private long position_;
    /**
     * <code>int64 position = 3;</code>
     */
    public long getPosition() {
      return position_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      if (securityId_ != 0L) {
        output.writeInt64(2, securityId_);
      }
      if (position_ != 0L) {
        output.writeInt64(3, position_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (securityId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, securityId_);
      }
      if (position_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, position_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.Position)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.Position other = (krypto.network.rpc.Krypto.Position) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getSecurityId()
          == other.getSecurityId());
      result = result && (getPosition()
          == other.getPosition());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + SECURITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSecurityId());
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPosition());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.Position parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.Position)
        krypto.network.rpc.Krypto.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.Position.class, krypto.network.rpc.Krypto.Position.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        securityId_ = 0L;

        position_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Position_descriptor;
      }

      public krypto.network.rpc.Krypto.Position getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.Position.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.Position build() {
        krypto.network.rpc.Krypto.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.Position buildPartial() {
        krypto.network.rpc.Krypto.Position result = new krypto.network.rpc.Krypto.Position(this);
        result.timestamp_ = timestamp_;
        result.securityId_ = securityId_;
        result.position_ = position_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.Position) {
          return mergeFrom((krypto.network.rpc.Krypto.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.Position other) {
        if (other == krypto.network.rpc.Krypto.Position.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getSecurityId() != 0L) {
          setSecurityId(other.getSecurityId());
        }
        if (other.getPosition() != 0L) {
          setPosition(other.getPosition());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.Position) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long securityId_ ;
      /**
       * <code>int64 security_id = 2;</code>
       */
      public long getSecurityId() {
        return securityId_;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder setSecurityId(long value) {
        
        securityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 security_id = 2;</code>
       */
      public Builder clearSecurityId() {
        
        securityId_ = 0L;
        onChanged();
        return this;
      }

      private long position_ ;
      /**
       * <code>int64 position = 3;</code>
       */
      public long getPosition() {
        return position_;
      }
      /**
       * <code>int64 position = 3;</code>
       */
      public Builder setPosition(long value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 position = 3;</code>
       */
      public Builder clearPosition() {
        
        position_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.Position)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.Position)
    private static final krypto.network.rpc.Krypto.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.Position();
    }

    public static krypto.network.rpc.Krypto.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Position(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RiskSummaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.RiskSummary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    java.util.List<krypto.network.rpc.Krypto.Position> 
        getPositionsList();
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    krypto.network.rpc.Krypto.Position getPositions(int index);
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    int getPositionsCount();
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    java.util.List<? extends krypto.network.rpc.Krypto.PositionOrBuilder> 
        getPositionsOrBuilderList();
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    krypto.network.rpc.Krypto.PositionOrBuilder getPositionsOrBuilder(
        int index);

    /**
     * <code>double pnl = 3;</code>
     */
    double getPnl();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.RiskSummary}
   */
  public  static final class RiskSummary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.RiskSummary)
      RiskSummaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RiskSummary.newBuilder() to construct.
    private RiskSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RiskSummary() {
      timestamp_ = 0L;
      positions_ = java.util.Collections.emptyList();
      pnl_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RiskSummary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                positions_ = new java.util.ArrayList<krypto.network.rpc.Krypto.Position>();
                mutable_bitField0_ |= 0x00000002;
              }
              positions_.add(
                  input.readMessage(krypto.network.rpc.Krypto.Position.parser(), extensionRegistry));
              break;
            }
            case 25: {

              pnl_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          positions_ = java.util.Collections.unmodifiableList(positions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_RiskSummary_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_RiskSummary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.RiskSummary.class, krypto.network.rpc.Krypto.RiskSummary.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int POSITIONS_FIELD_NUMBER = 2;
    private java.util.List<krypto.network.rpc.Krypto.Position> positions_;
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    public java.util.List<krypto.network.rpc.Krypto.Position> getPositionsList() {
      return positions_;
    }
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    public java.util.List<? extends krypto.network.rpc.Krypto.PositionOrBuilder> 
        getPositionsOrBuilderList() {
      return positions_;
    }
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    public int getPositionsCount() {
      return positions_.size();
    }
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    public krypto.network.rpc.Krypto.Position getPositions(int index) {
      return positions_.get(index);
    }
    /**
     * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
     */
    public krypto.network.rpc.Krypto.PositionOrBuilder getPositionsOrBuilder(
        int index) {
      return positions_.get(index);
    }

    public static final int PNL_FIELD_NUMBER = 3;
    private double pnl_;
    /**
     * <code>double pnl = 3;</code>
     */
    public double getPnl() {
      return pnl_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      for (int i = 0; i < positions_.size(); i++) {
        output.writeMessage(2, positions_.get(i));
      }
      if (pnl_ != 0D) {
        output.writeDouble(3, pnl_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      for (int i = 0; i < positions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, positions_.get(i));
      }
      if (pnl_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, pnl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.RiskSummary)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.RiskSummary other = (krypto.network.rpc.Krypto.RiskSummary) obj;

      boolean result = true;
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getPositionsList()
          .equals(other.getPositionsList());
      result = result && (
          java.lang.Double.doubleToLongBits(getPnl())
          == java.lang.Double.doubleToLongBits(
              other.getPnl()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      if (getPositionsCount() > 0) {
        hash = (37 * hash) + POSITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPositionsList().hashCode();
      }
      hash = (37 * hash) + PNL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPnl()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.RiskSummary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.RiskSummary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.RiskSummary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.RiskSummary)
        krypto.network.rpc.Krypto.RiskSummaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_RiskSummary_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_RiskSummary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.RiskSummary.class, krypto.network.rpc.Krypto.RiskSummary.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.RiskSummary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPositionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        if (positionsBuilder_ == null) {
          positions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          positionsBuilder_.clear();
        }
        pnl_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_RiskSummary_descriptor;
      }

      public krypto.network.rpc.Krypto.RiskSummary getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.RiskSummary.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.RiskSummary build() {
        krypto.network.rpc.Krypto.RiskSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.RiskSummary buildPartial() {
        krypto.network.rpc.Krypto.RiskSummary result = new krypto.network.rpc.Krypto.RiskSummary(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.timestamp_ = timestamp_;
        if (positionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            positions_ = java.util.Collections.unmodifiableList(positions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.positions_ = positions_;
        } else {
          result.positions_ = positionsBuilder_.build();
        }
        result.pnl_ = pnl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.RiskSummary) {
          return mergeFrom((krypto.network.rpc.Krypto.RiskSummary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.RiskSummary other) {
        if (other == krypto.network.rpc.Krypto.RiskSummary.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (positionsBuilder_ == null) {
          if (!other.positions_.isEmpty()) {
            if (positions_.isEmpty()) {
              positions_ = other.positions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePositionsIsMutable();
              positions_.addAll(other.positions_);
            }
            onChanged();
          }
        } else {
          if (!other.positions_.isEmpty()) {
            if (positionsBuilder_.isEmpty()) {
              positionsBuilder_.dispose();
              positionsBuilder_ = null;
              positions_ = other.positions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              positionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPositionsFieldBuilder() : null;
            } else {
              positionsBuilder_.addAllMessages(other.positions_);
            }
          }
        }
        if (other.getPnl() != 0D) {
          setPnl(other.getPnl());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.RiskSummary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.RiskSummary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<krypto.network.rpc.Krypto.Position> positions_ =
        java.util.Collections.emptyList();
      private void ensurePositionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          positions_ = new java.util.ArrayList<krypto.network.rpc.Krypto.Position>(positions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          krypto.network.rpc.Krypto.Position, krypto.network.rpc.Krypto.Position.Builder, krypto.network.rpc.Krypto.PositionOrBuilder> positionsBuilder_;

      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public java.util.List<krypto.network.rpc.Krypto.Position> getPositionsList() {
        if (positionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positions_);
        } else {
          return positionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public int getPositionsCount() {
        if (positionsBuilder_ == null) {
          return positions_.size();
        } else {
          return positionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public krypto.network.rpc.Krypto.Position getPositions(int index) {
        if (positionsBuilder_ == null) {
          return positions_.get(index);
        } else {
          return positionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder setPositions(
          int index, krypto.network.rpc.Krypto.Position value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.set(index, value);
          onChanged();
        } else {
          positionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder setPositions(
          int index, krypto.network.rpc.Krypto.Position.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder addPositions(krypto.network.rpc.Krypto.Position value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.add(value);
          onChanged();
        } else {
          positionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder addPositions(
          int index, krypto.network.rpc.Krypto.Position value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.add(index, value);
          onChanged();
        } else {
          positionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder addPositions(
          krypto.network.rpc.Krypto.Position.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.add(builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder addPositions(
          int index, krypto.network.rpc.Krypto.Position.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder addAllPositions(
          java.lang.Iterable<? extends krypto.network.rpc.Krypto.Position> values) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positions_);
          onChanged();
        } else {
          positionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder clearPositions() {
        if (positionsBuilder_ == null) {
          positions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          positionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public Builder removePositions(int index) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.remove(index);
          onChanged();
        } else {
          positionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public krypto.network.rpc.Krypto.Position.Builder getPositionsBuilder(
          int index) {
        return getPositionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public krypto.network.rpc.Krypto.PositionOrBuilder getPositionsOrBuilder(
          int index) {
        if (positionsBuilder_ == null) {
          return positions_.get(index);  } else {
          return positionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public java.util.List<? extends krypto.network.rpc.Krypto.PositionOrBuilder> 
           getPositionsOrBuilderList() {
        if (positionsBuilder_ != null) {
          return positionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positions_);
        }
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public krypto.network.rpc.Krypto.Position.Builder addPositionsBuilder() {
        return getPositionsFieldBuilder().addBuilder(
            krypto.network.rpc.Krypto.Position.getDefaultInstance());
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public krypto.network.rpc.Krypto.Position.Builder addPositionsBuilder(
          int index) {
        return getPositionsFieldBuilder().addBuilder(
            index, krypto.network.rpc.Krypto.Position.getDefaultInstance());
      }
      /**
       * <code>repeated .krypto.network.rpc.Position positions = 2;</code>
       */
      public java.util.List<krypto.network.rpc.Krypto.Position.Builder> 
           getPositionsBuilderList() {
        return getPositionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          krypto.network.rpc.Krypto.Position, krypto.network.rpc.Krypto.Position.Builder, krypto.network.rpc.Krypto.PositionOrBuilder> 
          getPositionsFieldBuilder() {
        if (positionsBuilder_ == null) {
          positionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              krypto.network.rpc.Krypto.Position, krypto.network.rpc.Krypto.Position.Builder, krypto.network.rpc.Krypto.PositionOrBuilder>(
                  positions_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          positions_ = null;
        }
        return positionsBuilder_;
      }

      private double pnl_ ;
      /**
       * <code>double pnl = 3;</code>
       */
      public double getPnl() {
        return pnl_;
      }
      /**
       * <code>double pnl = 3;</code>
       */
      public Builder setPnl(double value) {
        
        pnl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pnl = 3;</code>
       */
      public Builder clearPnl() {
        
        pnl_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.RiskSummary)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.RiskSummary)
    private static final krypto.network.rpc.Krypto.RiskSummary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.RiskSummary();
    }

    public static krypto.network.rpc.Krypto.RiskSummary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RiskSummary>
        PARSER = new com.google.protobuf.AbstractParser<RiskSummary>() {
      public RiskSummary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RiskSummary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RiskSummary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RiskSummary> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.RiskSummary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:krypto.network.rpc.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.krypto.network.rpc.RequestType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.krypto.network.rpc.RequestType type = 1;</code>
     */
    krypto.network.rpc.Krypto.RequestType getType();

    /**
     * <code>int64 id = 2;</code>
     */
    long getId();

    /**
     * <code>string exchange = 3;</code>
     */
    java.lang.String getExchange();
    /**
     * <code>string exchange = 3;</code>
     */
    com.google.protobuf.ByteString
        getExchangeBytes();

    /**
     * <code>string symbol = 4;</code>
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 4;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
     */
    int getInstrumentTypeValue();
    /**
     * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
     */
    krypto.network.rpc.Krypto.InstrumentType getInstrumentType();
  }
  /**
   * Protobuf type {@code krypto.network.rpc.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:krypto.network.rpc.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      type_ = 0;
      id_ = 0L;
      exchange_ = "";
      symbol_ = "";
      instrumentType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              id_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              exchange_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              instrumentType_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              krypto.network.rpc.Krypto.Request.class, krypto.network.rpc.Krypto.Request.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.krypto.network.rpc.RequestType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.krypto.network.rpc.RequestType type = 1;</code>
     */
    public krypto.network.rpc.Krypto.RequestType getType() {
      krypto.network.rpc.Krypto.RequestType result = krypto.network.rpc.Krypto.RequestType.valueOf(type_);
      return result == null ? krypto.network.rpc.Krypto.RequestType.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>int64 id = 2;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int EXCHANGE_FIELD_NUMBER = 3;
    private volatile java.lang.Object exchange_;
    /**
     * <code>string exchange = 3;</code>
     */
    public java.lang.String getExchange() {
      java.lang.Object ref = exchange_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exchange_ = s;
        return s;
      }
    }
    /**
     * <code>string exchange = 3;</code>
     */
    public com.google.protobuf.ByteString
        getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 4;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 4;</code>
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INSTRUMENT_TYPE_FIELD_NUMBER = 5;
    private int instrumentType_;
    /**
     * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
     */
    public int getInstrumentTypeValue() {
      return instrumentType_;
    }
    /**
     * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
     */
    public krypto.network.rpc.Krypto.InstrumentType getInstrumentType() {
      krypto.network.rpc.Krypto.InstrumentType result = krypto.network.rpc.Krypto.InstrumentType.valueOf(instrumentType_);
      return result == null ? krypto.network.rpc.Krypto.InstrumentType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != krypto.network.rpc.Krypto.RequestType.INVALID.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (id_ != 0L) {
        output.writeInt64(2, id_);
      }
      if (!getExchangeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, exchange_);
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, symbol_);
      }
      if (instrumentType_ != krypto.network.rpc.Krypto.InstrumentType.UNKNOWN_INSTRUMENT_TYPE.getNumber()) {
        output.writeEnum(5, instrumentType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != krypto.network.rpc.Krypto.RequestType.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      if (!getExchangeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, exchange_);
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, symbol_);
      }
      if (instrumentType_ != krypto.network.rpc.Krypto.InstrumentType.UNKNOWN_INSTRUMENT_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, instrumentType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof krypto.network.rpc.Krypto.Request)) {
        return super.equals(obj);
      }
      krypto.network.rpc.Krypto.Request other = (krypto.network.rpc.Krypto.Request) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (getId()
          == other.getId());
      result = result && getExchange()
          .equals(other.getExchange());
      result = result && getSymbol()
          .equals(other.getSymbol());
      result = result && instrumentType_ == other.instrumentType_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getExchange().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + INSTRUMENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + instrumentType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static krypto.network.rpc.Krypto.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static krypto.network.rpc.Krypto.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(krypto.network.rpc.Krypto.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code krypto.network.rpc.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:krypto.network.rpc.Request)
        krypto.network.rpc.Krypto.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                krypto.network.rpc.Krypto.Request.class, krypto.network.rpc.Krypto.Request.Builder.class);
      }

      // Construct using krypto.network.rpc.Krypto.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        id_ = 0L;

        exchange_ = "";

        symbol_ = "";

        instrumentType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return krypto.network.rpc.Krypto.internal_static_krypto_network_rpc_Request_descriptor;
      }

      public krypto.network.rpc.Krypto.Request getDefaultInstanceForType() {
        return krypto.network.rpc.Krypto.Request.getDefaultInstance();
      }

      public krypto.network.rpc.Krypto.Request build() {
        krypto.network.rpc.Krypto.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public krypto.network.rpc.Krypto.Request buildPartial() {
        krypto.network.rpc.Krypto.Request result = new krypto.network.rpc.Krypto.Request(this);
        result.type_ = type_;
        result.id_ = id_;
        result.exchange_ = exchange_;
        result.symbol_ = symbol_;
        result.instrumentType_ = instrumentType_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof krypto.network.rpc.Krypto.Request) {
          return mergeFrom((krypto.network.rpc.Krypto.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(krypto.network.rpc.Krypto.Request other) {
        if (other == krypto.network.rpc.Krypto.Request.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getExchange().isEmpty()) {
          exchange_ = other.exchange_;
          onChanged();
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.instrumentType_ != 0) {
          setInstrumentTypeValue(other.getInstrumentTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        krypto.network.rpc.Krypto.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (krypto.network.rpc.Krypto.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.krypto.network.rpc.RequestType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.krypto.network.rpc.RequestType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.RequestType type = 1;</code>
       */
      public krypto.network.rpc.Krypto.RequestType getType() {
        krypto.network.rpc.Krypto.RequestType result = krypto.network.rpc.Krypto.RequestType.valueOf(type_);
        return result == null ? krypto.network.rpc.Krypto.RequestType.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.RequestType type = 1;</code>
       */
      public Builder setType(krypto.network.rpc.Krypto.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.RequestType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long id_ ;
      /**
       * <code>int64 id = 2;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 2;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 2;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object exchange_ = "";
      /**
       * <code>string exchange = 3;</code>
       */
      public java.lang.String getExchange() {
        java.lang.Object ref = exchange_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exchange_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string exchange = 3;</code>
       */
      public com.google.protobuf.ByteString
          getExchangeBytes() {
        java.lang.Object ref = exchange_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exchange_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string exchange = 3;</code>
       */
      public Builder setExchange(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        exchange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string exchange = 3;</code>
       */
      public Builder clearExchange() {
        
        exchange_ = getDefaultInstance().getExchange();
        onChanged();
        return this;
      }
      /**
       * <code>string exchange = 3;</code>
       */
      public Builder setExchangeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        exchange_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 4;</code>
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 4;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 4;</code>
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 4;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private int instrumentType_ = 0;
      /**
       * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
       */
      public int getInstrumentTypeValue() {
        return instrumentType_;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
       */
      public Builder setInstrumentTypeValue(int value) {
        instrumentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
       */
      public krypto.network.rpc.Krypto.InstrumentType getInstrumentType() {
        krypto.network.rpc.Krypto.InstrumentType result = krypto.network.rpc.Krypto.InstrumentType.valueOf(instrumentType_);
        return result == null ? krypto.network.rpc.Krypto.InstrumentType.UNRECOGNIZED : result;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
       */
      public Builder setInstrumentType(krypto.network.rpc.Krypto.InstrumentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        instrumentType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.krypto.network.rpc.InstrumentType instrument_type = 5;</code>
       */
      public Builder clearInstrumentType() {
        
        instrumentType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:krypto.network.rpc.Request)
    }

    // @@protoc_insertion_point(class_scope:krypto.network.rpc.Request)
    private static final krypto.network.rpc.Krypto.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new krypto.network.rpc.Krypto.Request();
    }

    public static krypto.network.rpc.Krypto.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public krypto.network.rpc.Krypto.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_Instrument_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_Instrument_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_Quote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_Quote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_OrderRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_OrderRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_OrderCancelRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_OrderCancelRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_OrderReplaceRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_OrderUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_OrderUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_Order_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_Order_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_Position_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_RiskSummary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_RiskSummary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_krypto_network_rpc_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_krypto_network_rpc_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014krypto.proto\022\022krypto.network.rpc\"\301\002\n\nI" +
      "nstrument\022\n\n\002id\030\001 \001(\003\0220\n\004type\030\002 \001(\0162\".kr" +
      "ypto.network.rpc.InstrumentType\022\016\n\006symbo" +
      "l\030\003 \001(\t\022.\n\010exchange\030\004 \001(\0162\034.krypto.netwo" +
      "rk.rpc.Exchange\022\027\n\017exchange_symbol\030\005 \001(\t" +
      "\022\021\n\ttick_size\030\006 \001(\001\022\020\n\010min_size\030\007 \001(\001\022\020\n" +
      "\010max_size\030\010 \001(\001\0221\n\013crypto_base\030\t \001(\0162\034.k" +
      "rypto.network.rpc.Currency\0222\n\014crypto_quo" +
      "te\030\n \001(\0162\034.krypto.network.rpc.Currency\"\232" +
      "\001\n\005Quote\022\021\n\ttimestamp\030\001 \001(\003\022\023\n\013security_" +
      "id\030\002 \001(\003\022\013\n\003bid\030\003 \001(\003\022\013\n\003ask\030\004 \001(\003\022\014\n\004la" +
      "st\030\005 \001(\003\022\024\n\014bid_quantity\030\006 \001(\003\022\024\n\014ask_qu" +
      "antity\030\007 \001(\003\022\025\n\rlast_quantity\030\010 \001(\003\"\277\001\n\014" +
      "OrderRequest\022\021\n\ttimestamp\030\001 \001(\003\022\023\n\013secur" +
      "ity_id\030\002 \001(\003\022\r\n\005price\030\003 \001(\003\022\020\n\010quantity\030" +
      "\004 \001(\003\022&\n\004side\030\005 \001(\0162\030.krypto.network.rpc" +
      ".Side\022\020\n\010order_id\030\006 \001(\t\022,\n\003tif\030\007 \001(\0162\037.k" +
      "rypto.network.rpc.TimeInForce\"9\n\022OrderCa" +
      "ncelRequest\022\021\n\ttimestamp\030\001 \001(\003\022\020\n\010order_" +
      "id\030\002 \001(\t\"\203\001\n\023OrderReplaceRequest\022\021\n\ttime" +
      "stamp\030\001 \001(\003\022\020\n\010order_id\030\002 \001(\t\022\r\n\005price\030\003" +
      " \001(\003\022\020\n\010quantity\030\004 \001(\003\022&\n\004side\030\005 \001(\0162\030.k" +
      "rypto.network.rpc.Side\"|\n\013OrderUpdate\022\021\n" +
      "\ttimestamp\030\001 \001(\003\022\020\n\010order_id\030\002 \001(\t\022/\n\006st" +
      "atus\030\003 \001(\0162\037.krypto.network.rpc.OrderSta" +
      "tus\022\027\n\017filled_quantity\030\004 \001(\003\"\215\001\n\005Order\022\021" +
      "\n\ttimestamp\030\001 \001(\003\0221\n\007request\030\002 \001(\0132 .kry" +
      "pto.network.rpc.OrderRequest\0220\n\007updates\030" +
      "\003 \003(\0132\037.krypto.network.rpc.OrderUpdate\022\014" +
      "\n\004fees\030\004 \001(\001\"D\n\010Position\022\021\n\ttimestamp\030\001 " +
      "\001(\003\022\023\n\013security_id\030\002 \001(\003\022\020\n\010position\030\003 \001" +
      "(\003\"^\n\013RiskSummary\022\021\n\ttimestamp\030\001 \001(\003\022/\n\t" +
      "positions\030\002 \003(\0132\034.krypto.network.rpc.Pos" +
      "ition\022\013\n\003pnl\030\003 \001(\001\"\243\001\n\007Request\022-\n\004type\030\001" +
      " \001(\0162\037.krypto.network.rpc.RequestType\022\n\n" +
      "\002id\030\002 \001(\003\022\020\n\010exchange\030\003 \001(\t\022\016\n\006symbol\030\004 " +
      "\001(\t\022;\n\017instrument_type\030\005 \001(\0162\".krypto.ne" +
      "twork.rpc.InstrumentType*.\n\010Exchange\022\024\n\020" +
      "UNKNOWN_EXCHANGE\020\000\022\014\n\010COINBASE\020\001*+\n\004Side" +
      "\022\020\n\014UNKNOWN_SIDE\020\000\022\007\n\003BUY\020\001\022\010\n\004SELL\020\002*5\n" +
      "\tOrderSide\022\026\n\022UNKNOWN_ORDER_SIDE\020\000\022\007\n\003BI" +
      "D\020\001\022\007\n\003ASK\020\002*\377\001\n\013OrderStatus\022\030\n\024UNKNOWN_" +
      "ORDER_STATUS\020\000\022\r\n\tIN_FLIGHT\020\001\022\024\n\020CANCEL_" +
      "IN_FLIGHT\020\002\022\025\n\021REPLACE_IN_FLIGHT\020\003\022\007\n\003NE" +
      "W\020\004\022\014\n\010ACCEPTED\020\005\022\r\n\tCANCELLED\020\006\022\014\n\010REPL" +
      "ACED\020\007\022\014\n\010REJECTED\020\010\022\023\n\017CANCEL_REJECTED\020" +
      "\t\022\024\n\020REPLACE_REJECTED\020\n\022\n\n\006FILLED\020\013\022\024\n\020P" +
      "ARTIALLY_FILLED\020\014\022\013\n\007EXPIRED\020\r*K\n\013TimeIn" +
      "Force\022\017\n\013UNKNOWN_TIF\020\000\022\007\n\003DAY\020\001\022\007\n\003IOC\020\002" +
      "\022\007\n\003FOK\020\003\022\007\n\003GTC\020\004\022\007\n\003GTT\020\005*\217\002\n\010Currency" +
      "\022\024\n\020UNKNOWN_CURRENCY\020\000\022\007\n\003BAT\020\001\022\007\n\003BCH\020\002" +
      "\022\007\n\003BTC\020\003\022\007\n\003CVC\020\004\022\007\n\003DAI\020\005\022\007\n\003DNT\020\006\022\007\n\003" +
      "EOS\020\007\022\007\n\003ETC\020\010\022\007\n\003ETH\020\t\022\007\n\003EUR\020\n\022\007\n\003GBP\020" +
      "\013\022\007\n\003GNT\020\014\022\010\n\004LINK\020\r\022\010\n\004LOOM\020\016\022\007\n\003LTC\020\017\022" +
      "\010\n\004MANA\020\020\022\007\n\003REP\020\021\022\007\n\003USD\020\022\022\010\n\004USDC\020\023\022\007\n" +
      "\003XLM\020\024\022\007\n\003XRP\020\025\022\007\n\003ZEC\020\026\022\007\n\003ZRX\020\027\022\007\n\003XTZ" +
      "\020\030\022\010\n\004ALGO\020\031\022\007\n\003DAS\020\032*Q\n\013RequestType\022\013\n\007" +
      "INVALID\020\000\022\t\n\005EMPTY\020\001\022\007\n\003ALL\020\002\022\006\n\002ID\020\003\022\014\n" +
      "\010EXCHANGE\020\004\022\013\n\007PRODUCT\020\005*g\n\016InstrumentTy" +
      "pe\022\033\n\027UNKNOWN_INSTRUMENT_TYPE\020\000\022\t\n\005STOCK" +
      "\020\001\022\n\n\006FUTURE\020\002\022\n\n\006OPTION\020\003\022\t\n\005FOREX\020\004\022\n\n" +
      "\006CRYPTO\020\0052f\n\021InstrumentService\022Q\n\016GetIns" +
      "truments\022\033.krypto.network.rpc.Request\032\036." +
      "krypto.network.rpc.Instrument\"\0000\0012\336\002\n\014Or" +
      "derService\022O\n\010NewOrder\022 .krypto.network." +
      "rpc.OrderRequest\032\037.krypto.network.rpc.Or" +
      "derUpdate\"\000\022X\n\013CancelOrder\022&.krypto.netw" +
      "ork.rpc.OrderCancelRequest\032\037.krypto.netw" +
      "ork.rpc.OrderUpdate\"\000\022Z\n\014ReplaceOrder\022\'." +
      "krypto.network.rpc.OrderReplaceRequest\032\037" +
      ".krypto.network.rpc.OrderUpdate\"\000\022G\n\tGet" +
      "Orders\022\033.krypto.network.rpc.Request\032\031.kr" +
      "ypto.network.rpc.Order\"\0000\0012\\\n\021PriceCache" +
      "Service\022G\n\tGetQuotes\022\033.krypto.network.rp" +
      "c.Request\032\031.krypto.network.rpc.Quote\"\0000\001" +
      "2\204\002\n\013RiskService\022M\n\014GetPositions\022\033.krypt" +
      "o.network.rpc.Request\032\034.krypto.network.r" +
      "pc.Position\"\0000\001\022P\n\016GetRiskSummary\022\033.kryp" +
      "to.network.rpc.Request\032\037.krypto.network." +
      "rpc.RiskSummary\"\000\022T\n\020GetRiskSummaries\022\033." +
      "krypto.network.rpc.Request\032\037.krypto.netw" +
      "ork.rpc.RiskSummary\"\0000\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_krypto_network_rpc_Instrument_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_krypto_network_rpc_Instrument_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_Instrument_descriptor,
        new java.lang.String[] { "Id", "Type", "Symbol", "Exchange", "ExchangeSymbol", "TickSize", "MinSize", "MaxSize", "CryptoBase", "CryptoQuote", });
    internal_static_krypto_network_rpc_Quote_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_krypto_network_rpc_Quote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_Quote_descriptor,
        new java.lang.String[] { "Timestamp", "SecurityId", "Bid", "Ask", "Last", "BidQuantity", "AskQuantity", "LastQuantity", });
    internal_static_krypto_network_rpc_OrderRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_krypto_network_rpc_OrderRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_OrderRequest_descriptor,
        new java.lang.String[] { "Timestamp", "SecurityId", "Price", "Quantity", "Side", "OrderId", "Tif", });
    internal_static_krypto_network_rpc_OrderCancelRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_krypto_network_rpc_OrderCancelRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_OrderCancelRequest_descriptor,
        new java.lang.String[] { "Timestamp", "OrderId", });
    internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_krypto_network_rpc_OrderReplaceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_OrderReplaceRequest_descriptor,
        new java.lang.String[] { "Timestamp", "OrderId", "Price", "Quantity", "Side", });
    internal_static_krypto_network_rpc_OrderUpdate_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_krypto_network_rpc_OrderUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_OrderUpdate_descriptor,
        new java.lang.String[] { "Timestamp", "OrderId", "Status", "FilledQuantity", });
    internal_static_krypto_network_rpc_Order_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_krypto_network_rpc_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_Order_descriptor,
        new java.lang.String[] { "Timestamp", "Request", "Updates", "Fees", });
    internal_static_krypto_network_rpc_Position_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_krypto_network_rpc_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_Position_descriptor,
        new java.lang.String[] { "Timestamp", "SecurityId", "Position", });
    internal_static_krypto_network_rpc_RiskSummary_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_krypto_network_rpc_RiskSummary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_RiskSummary_descriptor,
        new java.lang.String[] { "Timestamp", "Positions", "Pnl", });
    internal_static_krypto_network_rpc_Request_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_krypto_network_rpc_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_krypto_network_rpc_Request_descriptor,
        new java.lang.String[] { "Type", "Id", "Exchange", "Symbol", "InstrumentType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
