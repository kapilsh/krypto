buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
    }
}

plugins {
    id "com.google.protobuf" version "0.8.10"
    id 'java'
    id "idea"
}

group 'com.sharmakapil'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.kapilsh', name: 'flatbuffers-java', version: '1.11.0'
    compile group: 'org.zeromq', name: 'jeromq', version: '0.5.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    compile group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
    compile group: 'com.miglayout', name: 'miglayout', version: '3.7.4'
    compile group: 'com.typesafe', name: 'config', version: '1.4.0'
    compile group: 'com.jtattoo', name: 'JTattoo', version: '1.6.13'


    implementation 'io.grpc:grpc-netty-shaded:1.25.0'
    implementation 'io.grpc:grpc-protobuf:1.25.0'
    implementation 'io.grpc:grpc-stub:1.25.0'
}

protobuf {
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
        }
    }

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            task.builtins {
            }

            task.plugins {
                grpc {
                    outputSubDir = 'java'
                }
            }
        }
    }

    generatedFilesBaseDir = "$projectDir/src"
}

sourceSets {
    main {
        proto {}
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/main/java");
    }
}