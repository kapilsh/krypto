namespace krypto.serialization;

// general

enum Side: byte {UNKNOWN = 0, BUY = 1, SELL = 2}

enum OrderSide: byte {UNKNOWN = 0, BID = 1, ASK = 2}

table SequenceNumber {
  value: long;
}

// instruments

enum InstrumentType: byte {UNKNOWN = 0, STOCK = 1, FUTURE = 2, OPTION = 3, FOREX = 4, CRYPTO = 5}

enum Currency : byte {
    UNKNOWN = 0,
    BAT = 1,
    BCH = 2,
    BTC = 3,
    CVC = 4,
    DAI = 5,
    DNT = 6,
    EOS = 7,
    ETC = 8,
    ETH = 9,
    EUR = 10,
    GBP = 11,
    GNT = 12,
    LOOM = 13,
    LTC = 14,
    MANA = 15,
    REP = 16,
    USD = 17,
    USDC = 18,
    XLM = 19,
    XRP = 20,
    ZEC = 21,
    ZRX = 22
}

table Instrument {
  id: long;
  type: InstrumentType;
  symbol: string;
  exchange: string;
  exchange_symbol: string;
  tick_size: double;
  min_size: double;
  max_size: double;
  crypto_base: Currency;
  crypto_quote: Currency;
}

// market data

table Quote {
  timestamp: long;
  security_id: long;
  bid: long;
  ask: long;
  last: long;
  bid_quantity: long;
  ask_quantity: long;
  last_quantity: long;
}

struct SnapshotPriceLevel {
  price: long;
  quantity: long;
}

table Snapshot {
  timestamp: long;
  security_id: long;
  bids: [SnapshotPriceLevel];
  asks: [SnapshotPriceLevel];
}

struct IncrementalPriceLevel {
  price: long;
  quantity: long;
  side: long;
}

table Incremental {
  timestamp: long;
  security_id: long;
  updates: [IncrementalPriceLevel];
}

table Trade {
  timestamp: long;
  security_id: long;
  price: long;
  quantity: long;
  side: Side;
  trade_id: string;
}


